var documenterSearchIndex = {"docs":
[{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ServerInfo/#ServerInfo","page":"ServerInfo","title":"ServerInfo","text":"","category":"section"},{"location":"openapi/Models/ServerInfo/#Properties","page":"ServerInfo","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"Name Type Description Notes\nrxinfer_version String The version of RxInfer that the server is using, returns unknown if the version is unknown or hidden [default to null]\nserver_version String The version of the RxInferServer, returns unknown if the version is unknown or hidden [default to null]\nserver_edition String The edition of the RxInferServer, as set in RXINFER_EDITION environment variable [default to null]\njulia_version String The version of Julia as presented in VERSION [default to null]\napi_version String The version of the API being used [default to v1]","category":"page"},{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"","category":"page"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ErrorResponse/#ErrorResponse","page":"ErrorResponse","title":"ErrorResponse","text":"","category":"section"},{"location":"openapi/Models/ErrorResponse/#Properties","page":"ErrorResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"Name Type Description Notes\nerror String Error message explaining the failure [default to null]\nmessage String Additional message providing details about the failure [optional] [default to null]","category":"page"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"","category":"page"},{"location":"openapi/Models/DeleteModelRequest/","page":"DeleteModelRequest","title":"DeleteModelRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/DeleteModelRequest/#DeleteModelRequest","page":"DeleteModelRequest","title":"DeleteModelRequest","text":"","category":"section"},{"location":"openapi/Models/DeleteModelRequest/#Properties","page":"DeleteModelRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/DeleteModelRequest/","page":"DeleteModelRequest","title":"DeleteModelRequest","text":"Name Type Description Notes\nmodel_id UUID ID of the model to delete [default to null]","category":"page"},{"location":"openapi/Models/DeleteModelRequest/","page":"DeleteModelRequest","title":"DeleteModelRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/DeleteModelRequest/","page":"DeleteModelRequest","title":"DeleteModelRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/DeleteModelRequest/","page":"DeleteModelRequest","title":"DeleteModelRequest","text":"","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/README/#Documentation-for-RxInferServer-OpenAPI-specification","page":"Overview","title":"Documentation for RxInferServer OpenAPI specification","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"<a name=\"documentation-for-api-endpoints\"></a>","category":"page"},{"location":"openapi/README/#Documentation-for-API-Endpoints","page":"Overview","title":"Documentation for API Endpoints","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"All URIs are relative to http://localhost:8000/v1","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"Class Method HTTP request Description\nAuthenticationApi generate_token POST /generate-token Generate authentication token\nModelsApi attach_metadata_to_event POST /models/{modelid}/episodes/{episodename}/events/{event_id}/attach-metadata Attach metadata to an event\nModelsApi create_episode POST /models/{modelid}/episodes/{episodename}/create Create a new episode for a model\nModelsApi create_model POST /models/create Create a new model instance\nModelsApi delete_episode DELETE /models/{modelid}/episodes/{episodename}/delete Delete an episode for a model\nModelsApi delete_model DELETE /models/{model_id}/delete Delete a model instance\nModelsApi get_created_models_info GET /models/created Get information about all created models for a specific token\nModelsApi get_episode_info GET /models/{modelid}/episodes/{episodename} Get episode information\nModelsApi get_episodes GET /models/{model_id}/episodes Get all episodes for a model\nModelsApi get_model_details GET /models/{model_name}/details Get model details\nModelsApi get_model_info GET /models/{model_id}/info Get model information\nModelsApi get_model_state GET /models/{model_id}/state Get the state of a model\nModelsApi get_models GET /models Get models\nModelsApi run_inference POST /models/{model_id}/infer Run inference on a model\nModelsApi run_learning POST /models/{model_id}/learn Learn from previous observations\nModelsApi wipe_episode POST /models/{modelid}/episodes/{episodename}/wipe Wipe all events from an episode\nServerApi get_server_info GET /info Get server information\nServerApi ping_server GET /ping Health check endpoint","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"<a name=\"documentation-for-models\"></a>","category":"page"},{"location":"openapi/README/#Documentation-for-Models","page":"Overview","title":"Documentation for Models","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"AttachMetadataToEventRequest\nCreateModelRequest\nCreateModelResponse\nCreatedModelInfo\nDeleteModelRequest\nEpisodeInfo\nErrorResponse\nInferRequest\nInferResponse\nLearnRequest\nLearnResponse\nLightweightModelDetails\nModelDetails\nModelList\nModelState\nNotFoundResponse\nPingResponse\nServerInfo\nSuccessResponse\nTokenResponse\nUnauthorizedResponse","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"<a name=\"documentation-for-authorization\"></a>","category":"page"},{"location":"openapi/README/#Documentation-for-Authorization","page":"Overview","title":"Documentation for Authorization","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"<a name=\"ApiKeyAuth\"></a>","category":"page"},{"location":"openapi/README/#ApiKeyAuth","page":"Overview","title":"ApiKeyAuth","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"Type: HTTP Bearer Token authentication","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/#AttachMetadataToEventRequest","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"","category":"section"},{"location":"openapi/Models/AttachMetadataToEventRequest/#Properties","page":"AttachMetadataToEventRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"Name Type Description Notes\nmetadata Map Metadata to attach to the event [default to null]","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"","category":"page"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/EpisodeInfo/#EpisodeInfo","page":"EpisodeInfo","title":"EpisodeInfo","text":"","category":"section"},{"location":"openapi/Models/EpisodeInfo/#Properties","page":"EpisodeInfo","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"Name Type Description Notes\nmodel_id UUID ID of the model this episode belongs to [default to null]\nname String Name of the episode [default to null]\ncreated_at Date Timestamp of when the episode was created [default to null]\nevents List List of events that have occurred in the episode [default to null]","category":"page"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"","category":"page"},{"location":"openapi/Models/CreateModelRequest/","page":"CreateModelRequest","title":"CreateModelRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateModelRequest/#CreateModelRequest","page":"CreateModelRequest","title":"CreateModelRequest","text":"","category":"section"},{"location":"openapi/Models/CreateModelRequest/#Properties","page":"CreateModelRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/CreateModelRequest/","page":"CreateModelRequest","title":"CreateModelRequest","text":"Name Type Description Notes\nmodel String The name of the model to create (including version identifier if applicable, e.g. \\&quot;BetaBernoulli-v1\\&quot;) [default to null]\narguments Map Model-specific configuration arguments [optional] [default to null]\ndescription String Optional description of the model instance [optional] [default to null]","category":"page"},{"location":"openapi/Models/CreateModelRequest/","page":"CreateModelRequest","title":"CreateModelRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/CreateModelRequest/","page":"CreateModelRequest","title":"CreateModelRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateModelRequest/","page":"CreateModelRequest","title":"CreateModelRequest","text":"","category":"page"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LearnRequest/#LearnRequest","page":"LearnRequest","title":"LearnRequest","text":"","category":"section"},{"location":"openapi/Models/LearnRequest/#Properties","page":"LearnRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"Name Type Description Notes\nepisodes List List of episodes to learn from [default to [\"default\"]]\nparameters List Which parameters to learn from the episodes, if not specified, all parameters will be learned [optional] [default to null]","category":"page"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"","category":"page"},{"location":"api/design-proposal/#Design-Proposal-for-RxInfer-Model-Server-API","page":"API design","title":"Design Proposal for RxInfer Model Server API","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"This proposal outlines a clean, RESTful API for the RxInfer model server, focusing on simplicity and ease of implementation while maintaining powerful probabilistic modeling capabilities. The current API is different and we can discuss how to integrate both of them.","category":"page"},{"location":"api/design-proposal/#Core-Concepts","page":"API design","title":"Core Concepts","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"Model Instance: An isolated runtime environment for a specific model, identified by a unique ID\nArguments: Fixed values passed to the model that don't change during inference (e.g., time step)\nParameters: Values that can be learned by the model (e.g., transition matrices)\nEpisode: A sequence of observations and actions, used for learning parameters","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"note: Note\nDo not confuse the arguments with the parameters. The arguments are the arguments that are passed to the model and are fixed for a single infer call. The parameters are the parameters that are learned by the model and are updated by the /api/models/{model_id}/learn endpoint.","category":"page"},{"location":"api/design-proposal/#API-Endpoints","page":"API design","title":"API Endpoints","text":"","category":"section"},{"location":"api/design-proposal/#Create-a-Model-Instance","page":"API design","title":"Create a Model Instance","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"The central to the API would be to create an endpoint for a single model instance. An instance would be defined as an isolated run-time environment for a specific model. It would be identified by a unique id. Two instances of the same model can be run in parallel and do not interfere with each other (unless they are explicitly designed to communicate with each other).","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"POST /api/models","category":"page"},{"location":"api/design-proposal/#Request","page":"API design","title":"Request","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"model\": \"drone-v1\",                    // (required) Model type name\n  \"description\": \"Drone model (testing)\", // (optional) Description\n  \"arguments\": {                          // (optional) Model configuration\n    \"dt\": 0.1,\n    \"horizon\": 10\n  }\n}","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"In the beginning we will be required to craft these models manually. This proposal does not allow users to define their own models. Thus, the model requires to be a valid model name, e.g. drone-v1, ar, rslds, hmm. A model also specifies the layout of the data that can be sent to the model as well as the parameters of the model that can be learned and actions that can be taken. The model also defines the set of fixed arguments that might be modified, e.g. dt or horizon. Those arguments are not learned by the model, but might be overwritten for a specific infer call. All of this information must be explicitly documented by a model designer (us in the beginning).","category":"page"},{"location":"api/design-proposal/#Response","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"model_id\": \"123e4567-e89b-12d3-a456-426614174000\"\n}","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"A user will now be able to use this model_id to send data to the model, plan actions or execute the learning.","category":"page"},{"location":"api/design-proposal/#Run-Inference","page":"API design","title":"Run Inference","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"POST /api/models/{model_id}/infer","category":"page"},{"location":"api/design-proposal/#Request-2","page":"API design","title":"Request","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"observation\": {\n    \"y\": [4, 5, 6]\n  },\n  \"goal\": {\n    \"y[end]\": [5, 6, 7]\n  },\n  \"timestamp\": 1234567890,         // (required) Observation timestamp\n  \"episode_id\": \"default\",          // (optional) Episode identifier\n  \"arguments\": {                    // (optional) Override model arguments\n    \"horizon\": 100\n  }\n}","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"Notes:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"The observation is a dictionary of the data to be sent to the model as defined in the model schema.\nThe timestamp field is the timestamp of the data, not the time when the data was received by the server. Certain models assume a certain frequency of the data, e.g. every dt seconds. In that case the server will use the timestamp to determine the time of the data to order them in time and to determine if any of the data is missing.\nThe episode_id is the id of the episode to which the data belongs. Can be omitted, default is used if not provided.\nThe idea of the episode is to group data into chunks, from which the model can learn independently. An agent can also decide to learn from a particular episode only once for efficiency or discard certain episodes if they are too old for example.\nThe syntax for the goal is currently structured for MPC-like behavior, setting a single goal at the end of the horizon. In future versions, we may expand this to support more complex goal specifications for true AIF.\nThe arguments are the arguments that are passed to the model. They are not learned by the model, but might be overwritten for a specific infer call.","category":"page"},{"location":"api/design-proposal/#Response-2","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"status\": \"success\",\n  \"posterior\": {\n    \"u\": {\n      \"distribution_type\": \"NormalMeanVariance\",\n      \"mean\": [0.1, 0.2, 0.3],\n      \"variance\": [0.01, 0.02, 0.03]\n    }\n  }\n}","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"The purpose of the posterior is to provide the user with a distribution over the actions that can be taken. The user can then use this distribution to take an action or to sample an action.","category":"page"},{"location":"api/design-proposal/#Store-Action","page":"API design","title":"Store Action","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"As noted in the original question, both observations and actions need to be stored to properly learn model parameters. The following endpoint allows storing the actions that were actually taken:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"POST /api/models/{model_id}/actions","category":"page"},{"location":"api/design-proposal/#Request-3","page":"API design","title":"Request","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"timestamp\": 1234567890,\n  \"episode_id\": \"default\",\n  \"action\": {\n    \"u\": [0.1, 0.2, 0.3]\n  }\n}","category":"page"},{"location":"api/design-proposal/#Response-3","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"status\": \"success\"\n}","category":"page"},{"location":"api/design-proposal/#Learn-Parameters","page":"API design","title":"Learn Parameters","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"A model can have parameters that can be learned from data. For example state transition matrices can be learned, or observational noise can be learned. Those are specified in the model's schema. During the infer call most of the model's parameters are fixed and not updated. This endpoint is used specifically to update the parameters of the model based on the data saved in the episodes.","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"POST /api/models/{model_id}/learn","category":"page"},{"location":"api/design-proposal/#Request-4","page":"API design","title":"Request","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"episode_ids\": [\"default\", \"episode2\"], // (optional) Episodes to learn from\n  \"relearn_episodes\": false,              // (optional) Relearn from all data points\n  \"parameters\": [\"A\", \"B\", \"C\"]           // (optional) Parameters to learn\n}","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"The idea of the episode_ids is to specify the episodes to learn from. If not provided, all episodes will be used. By default, if a model learned from a particular episode, it will not be used again unless the relearn_episodes flag is set to true. Or if the episode has new data it will be used again, but only the portion of the episode that has not been learned yet. Basically each episode should track whenever it has been used for learning or not. Which data has been used for learning or not. And what was the outcome of the learning.","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"An example of how it might work:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"Suppose we have episode with id \"episode1\" and it has 1000 data points and it hasn't been used for learning yet.\nThe server receives the /api/models/{model_id}/learn request with episode_ids set to [\"episode1\"].\nThe server uses the data saved in the episode \"episode1\" to learn new posteriors over the parameters of the model and saves it. It also saves the fact that it has been used for learning and it saves that exactly 1000 data points have been used for learning.\nThe server progress forward in time and receives new data into the episode \"episode1\".\nThe server receives the /api/models/{model_id}/learn request with episode_ids set to [\"episode1\"].\nThe server has already learned from the first 1000 data points, so it will only learn from the new data.\nTo do that it uses previously learned posteriors as a prior and learns the new posteriors using the new data only.\nThe server progresses forward in time and receives new data into the episode \"episode1\".\nThe server receives the /api/models/{model_id}/learn request with episode_ids set to [\"episode1\"] and relearn_episodes set to true.\nThe server will discard previously learned posteriors and will learn from all the data saved in the episode \"episode1\" again.","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"What to do with multiple episodes?","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"The server learns from episode with id \"episode1\" and gets \"posterior1\".\nThe server learns from episode with id \"episode2\" and gets \"posterior2\".\nThe server learns from episode with id \"episode3\" and gets \"posterior3\".\nThe server can now compute the product of all the posteriors and get the final posterior.","category":"page"},{"location":"api/design-proposal/#Response-4","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"status\": \"success\"\n}","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"After that all next invocations of the /api/models/{model_id}/infer endpoint will use the new posteriors for the learned parameters.","category":"page"},{"location":"api/design-proposal/#List-Models","page":"API design","title":"List Models","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"GET /api/models","category":"page"},{"location":"api/design-proposal/#Response-5","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"models\": [\n    {\n      \"model_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n      \"model\": \"drone-v1\",\n      \"description\": \"Drone model (testing)\",\n      \"created_at\": \"2023-04-01T12:00:00Z\",\n      \"episode_count\": 2\n    }\n  ],\n  \"total\": 1\n}","category":"page"},{"location":"api/design-proposal/#Get-Model-Details","page":"API design","title":"Get Model Details","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"GET /api/models/{model_id}","category":"page"},{"location":"api/design-proposal/#Response-6","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"model_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"model\": \"drone-v1\",\n  \"description\": \"Drone model (testing)\",\n  \"created_at\": \"2023-04-01T12:00:00Z\",\n  \"arguments\": {\n    \"dt\": 0.1,\n    \"horizon\": 10\n  },\n  \"parameters\": {\n    \"A\": {\"learned\": true, \"last_updated\": \"2023-04-01T14:20:00Z\"},\n    \"B\": {\"learned\": true, \"last_updated\": \"2023-04-01T14:20:00Z\"},\n    \"C\": {\"learned\": false}\n  }\n}","category":"page"},{"location":"api/design-proposal/#Delete-Model","page":"API design","title":"Delete Model","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"DELETE /api/models/{model_id}","category":"page"},{"location":"api/design-proposal/#Response-7","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"status\": \"success\",\n  \"message\": \"Model deleted successfully\"\n}","category":"page"},{"location":"api/design-proposal/#List-Episodes","page":"API design","title":"List Episodes","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"GET /api/models/{model_id}/episodes","category":"page"},{"location":"api/design-proposal/#Response-8","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"episodes\": [\n    {\n      \"episode_id\": \"default\",\n      \"data_points\": 120,\n      \"learned_points\": 100,\n      \"start_timestamp\": 1234567800,\n      \"end_timestamp\": 1234568800,\n      \"last_updated\": \"2023-04-01T13:45:00Z\"\n    }\n  ],\n  \"total\": 1\n}","category":"page"},{"location":"api/design-proposal/#Get-Available-Model-Types","page":"API design","title":"Get Available Model Types","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"GET /api/model-types","category":"page"},{"location":"api/design-proposal/#Response-9","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"model_types\": [\n    {\n      \"name\": \"drone-v1\",\n      \"description\": \"Dynamical model of a drone\",\n      \"schema_url\": \"/api/model-types/drone-v1/schema\",\n      \"category\": \"robotics\"\n    }\n  ]\n}","category":"page"},{"location":"api/design-proposal/#Get-Model-Type-Schema","page":"API design","title":"Get Model Type Schema","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"GET /api/model-types/{model_name}/schema","category":"page"},{"location":"api/design-proposal/#Response-10","page":"API design","title":"Response","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"name\": \"drone-v1\",\n  \"description\": \"Dynamical model of a drone\",\n  \"version\": \"1.0.0\",\n  \"arguments\": {\n    \"dt\": {\n      \"type\": \"float\",\n      \"description\": \"Time step duration\",\n      \"default\": 0.1,\n      \"min\": 0.01,\n      \"max\": 1.0\n    },\n    \"horizon\": {\n      \"type\": \"integer\",\n      \"description\": \"Planning horizon length\",\n      \"default\": 10,\n      \"min\": 1,\n      \"max\": 100\n    }\n  },\n  \"parameters\": {\n    \"A\": {\n      \"type\": \"matrix\",\n      \"description\": \"State transition matrix\",\n      \"dimensions\": [6, 6],\n      \"learnable\": true\n    },\n    \"B\": {\n      \"type\": \"matrix\",\n      \"description\": \"Control input matrix\",\n      \"dimensions\": [6, 3],\n      \"learnable\": true\n    },\n    \"C\": {\n      \"type\": \"matrix\",\n      \"description\": \"Observation matrix\",\n      \"dimensions\": [3, 6],\n      \"learnable\": true\n    }\n  },\n  \"observation_schema\": {\n    \"y\": {\n      \"type\": \"array\",\n      \"description\": \"Position measurements\",\n      \"dimensions\": [3],\n      \"example\": [0.0, 0.0, 1.0]\n    }\n  },\n  \"action_schema\": {\n    \"u\": {\n      \"type\": \"array\",\n      \"description\": \"Control inputs\",\n      \"dimensions\": [3],\n      \"example\": [0.1, 0.0, 0.2]\n    }\n  },\n  \"goal_schema\": {\n    \"y[end]\": {\n      \"type\": \"array\",\n      \"description\": \"Target position at end of horizon\",\n      \"dimensions\": [3],\n      \"example\": [1.0, 1.0, 2.0]\n    }\n  }\n}","category":"page"},{"location":"api/design-proposal/#Error-Handling","page":"API design","title":"Error Handling","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"All API endpoints return consistent error responses:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"error_code\": \"ERROR_CODE\",\n  \"error_description\": \"Human-readable error description\"\n}","category":"page"},{"location":"api/design-proposal/#Common-Error-Codes","page":"API design","title":"Common Error Codes","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"MODEL_NOT_FOUND             - The model does not exist\nDATA_NOT_FOUND              - The data is missing in the request\nDATA_INCOMPLETE             - The data is incomplete (missing required fields)\nDATA_LAYOUT_NOT_COMPATIBLE  - The data layout is not compatible with the model schema\nDATA_NOT_VALID              - The data is not valid (e.g. `NaN`, `Inf` or negative values where positive values are expected)\nINVALID_REQUEST             - The request is malformed","category":"page"},{"location":"api/design-proposal/#Authentication","page":"API design","title":"Authentication","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"Simple API key authentication:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"Authorization: Bearer <api_key>","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"In the beginning we simply provide an API endpoint to generate a new API key:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"POST /api/generate-api-key","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"Response:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"api_key\": \"your-new-api-key\"\n}","category":"page"},{"location":"api/design-proposal/#Distribution-Representation","page":"API design","title":"Distribution Representation","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"Since RxInfer works with probabilistic models, it's essential to represent distributions and uncertainty properly in the API responses. The API supports multiple formats for representing distributions:","category":"page"},{"location":"api/design-proposal/#Normal-Distribution","page":"API design","title":"Normal Distribution","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"distribution_type\": \"NormalMeanVariance\",\n  \"mean\": [1.5, 2.3, 0.7],\n  \"variance\": [0.1, 0.2, 0.15]\n}","category":"page"},{"location":"api/design-proposal/#Multivariate-Normal-Distribution","page":"API design","title":"Multivariate Normal Distribution","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"distribution_type\": \"MvNormalMeanCovariance\",\n  \"mean\": [1.5, 2.3, 0.7],\n  \"covariance\": [\n    [0.1, 0.01, 0.0],\n    [0.01, 0.2, 0.02],\n    [0.0, 0.02, 0.15]\n  ]\n}","category":"page"},{"location":"api/design-proposal/#Samples-from-Posterior","page":"API design","title":"Samples from Posterior","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"distribution_type\": \"SampleList\",\n  \"samples\": [\n    [1.42, 2.31, 0.68],\n    [1.51, 2.33, 0.71],\n    [1.49, 2.28, 0.72]\n  ],\n  \"weights\": [0.33, 0.33, 0.34]  // Optional, uniform if not provided\n}","category":"page"},{"location":"api/design-proposal/#Categorical-Distribution","page":"API design","title":"Categorical Distribution","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"{\n  \"distribution_type\": \"Categorical\",\n  \"probabilities\": [0.2, 0.5, 0.3]\n}","category":"page"},{"location":"api/design-proposal/#Data-Validation-and-Handling","page":"API design","title":"Data Validation and Handling","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"More comprehensive data validation should be implemented:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"Type Validation: Ensure all data matches the expected types\nRange Validation: Verify that values fall within acceptable ranges\nDimension Validation: Check that arrays/matrices have the correct dimensions\nMissing Data Handling: Define behavior for missing data points","category":"page"},{"location":"api/design-proposal/#Time-Series-Interpolation","page":"API design","title":"Time Series Interpolation","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"note: Note\nThis is to discuss! I propose to do simple interpolation for now to what the model needs. Less relevant for discrete models & environments.","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"For handling irregularly-sampled time series data:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"Gap Detection: Identify gaps in timestamp sequences\nInterpolation: Optionally interpolate missing data points\nConfigurable Policies: Allow configuration of how missing data is handled","category":"page"},{"location":"api/design-proposal/#Client-Example","page":"API design","title":"Client Example","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"from rxinfer.client import RxInferClient\n\n# Create client\nclient = RxInferClient(api_key=\"your-api-key\")\n\n# Create model\nmodel = client.create_model(\"drone-v1\", \n                           description=\"Drone control model\",\n                           arguments={\"dt\": 0.1, \"horizon\": 10})\n\n# Run inference\nposterior = model.infer(observation={\"y\": [4, 5, 6]}, \n                       goal={\"y[end]\": [5, 6, 7]},\n                       timestamp=1234567890)\n\n# Get action\naction = posterior.sample()\n\n# Store action\nmodel.store_action(action={\"u\": action}, timestamp=1234567890)\n\n# Learn parameters\nmodel.learn()","category":"page"},{"location":"api/design-proposal/#Implementation-Notes","page":"API design","title":"Implementation Notes","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"To support this I think we need to be able to define models in the way such that it accepts an argument N that specifies the number of time steps that the model will be created with. In the infer call the N will be set to horizon+1, the very first state will be the current state with the attached observation and the rest will be pure imagination based on the currently learned parameters into the future where we set goals at the end and create MPC control-like behavior. In the learn call the N will be set to the number of data points in a particular episode and all data will be used in a smoothing regime to learn the parameters.","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"TLDR:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"During infer: parameters are point masses -> infer actions with horizon N = horizon+1, with the first state as current state\nDuring learn: observations and actions are point masses from N data points -> learn parameters (where N = number of data points in the episode)","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"This requires a model at least in the form of:","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"@model function some_model(N, arguments, ...)\n  # ...\n  # arguments[:dt]\nend","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"question: Question\nTo learn the parameter we need to have both data and the action taken! We then need to also save the action taken in the database.","category":"page"},{"location":"api/design-proposal/#Future-Considerations","page":"API design","title":"Future Considerations","text":"","category":"section"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"API Versioning: As the API evolves, we may need to implement versioning through URL paths (e.g., /v1/api/models).\nAsynchronous Operations: For complex models, learning might take a long time. We may need to implement asynchronous endpoints for long-running operations.\nImproved Security: More robust authentication and authorization with different access levels may be needed as the service grows.","category":"page"},{"location":"api/design-proposal/","page":"API design","title":"API design","text":"","category":"page"},{"location":"openapi/Models/ModelDetails/","page":"ModelDetails","title":"ModelDetails","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelDetails/#ModelDetails","page":"ModelDetails","title":"ModelDetails","text":"","category":"section"},{"location":"openapi/Models/ModelDetails/#Properties","page":"ModelDetails","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ModelDetails/","page":"ModelDetails","title":"ModelDetails","text":"Name Type Description Notes\ndetails LightweightModelDetails  [default to null]\nconfig Map Extended model-specific configuration [default to null]","category":"page"},{"location":"openapi/Models/ModelDetails/","page":"ModelDetails","title":"ModelDetails","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ModelDetails/","page":"ModelDetails","title":"ModelDetails","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelDetails/","page":"ModelDetails","title":"ModelDetails","text":"","category":"page"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/PingResponse/#PingResponse","page":"PingResponse","title":"PingResponse","text":"","category":"section"},{"location":"openapi/Models/PingResponse/#Properties","page":"PingResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"Name Type Description Notes\nstatus String Status of the server [default to ok]","category":"page"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"","category":"page"},{"location":"database/#Database","page":"Database","title":"Database","text":"","category":"section"},{"location":"database/","page":"Database","title":"Database","text":"The Database module provides functionality for connecting to and interacting with MongoDB databases in RxInferServer.jl.","category":"page"},{"location":"database/#Overview","page":"Database","title":"Overview","text":"","category":"section"},{"location":"database/","page":"Database","title":"Database","text":"This module uses the Mongoc.jl package to provide MongoDB integration. It implements a scoped connection pattern that ensures proper resource cleanup and provides convenient access to database resources.","category":"page"},{"location":"database/#Configuration","page":"Database","title":"Configuration","text":"","category":"section"},{"location":"database/","page":"Database","title":"Database","text":"Read more about the configuration of the database in the Database Configuration section.","category":"page"},{"location":"database/#Core-Functions","page":"Database","title":"Core Functions","text":"","category":"section"},{"location":"database/","page":"Database","title":"Database","text":"RxInferServer.Database.with_connection\nRxInferServer.Database.client\nRxInferServer.Database.database\nRxInferServer.Database.collection","category":"page"},{"location":"database/#RxInferServer.Database.with_connection","page":"Database","title":"RxInferServer.Database.with_connection","text":"with_connection(f::F; url::String = RXINFER_SERVER_MONGODB_URL(), database::String = RXINFER_SERVER_MONGODB_DATABASE(), check_connection::Bool = true) where {F}\n\nEstablishes a connection to the MongoDB database and executes the given function with the connection and database scoped. This function automatically handles cleanup of MongoDB resources by destroying the client when the provided function completes.\n\nArguments\n\nf::F: The function to execute with the database connection.\nurl::String: The URL of the MongoDB server.\ndatabase::String: The name of the database to use.\n\nwith_connection(f; url = RXINFER_SERVER_MONGODB_URL(), database = RXINFER_SERVER_MONGODB_DATABASE(), check_connection = true) do \n    # Your code here\n    client = Database.client()\n    database = Database.database()\n    collection = Database.collection(\"users\")\nend\n\nSee also RxInferServer.Database.client, RxInferServer.Database.database, RxInferServer.Database.collection.\n\n\n\n\n\n","category":"function"},{"location":"database/#RxInferServer.Database.client","page":"Database","title":"RxInferServer.Database.client","text":"client()::Mongoc.Client\n\nReturns the current database client. Throws an error if called outside of a with_connection block.\n\nSee also RxInferServer.Database.with_connection, RxInferServer.Database.database, RxInferServer.Database.collection.\n\n\n\n\n\n","category":"function"},{"location":"database/#RxInferServer.Database.database","page":"Database","title":"RxInferServer.Database.database","text":"database()::Mongoc.Database\n\nReturns the current database. Throws an error if called outside of a with_connection block.\n\nSee also RxInferServer.Database.client, RxInferServer.Database.with_connection, RxInferServer.Database.collection.\n\n\n\n\n\n","category":"function"},{"location":"database/#RxInferServer.Database.collection","page":"Database","title":"RxInferServer.Database.collection","text":"collection(name::String)::Mongoc.Collection\n\nReturns the collection with the given name from the current database. Throws an error if called outside of a with_connection block.\n\nSee also RxInferServer.Database.client, RxInferServer.Database.database, RxInferServer.Database.with_connection.\n\n\n\n\n\n","category":"function"},{"location":"database/","page":"Database","title":"Database","text":"","category":"page"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/InferRequest/#InferRequest","page":"InferRequest","title":"InferRequest","text":"","category":"section"},{"location":"openapi/Models/InferRequest/#Properties","page":"InferRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"Name Type Description Notes\ndata Map Model-specific data to run inference on [default to null]\ntimestamp Date Timestamp of the inference request, used to mark the event in the episode [optional] [default to null]\nepisode_name String Name of the episode to run inference on [optional] [default to default]","category":"page"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"","category":"page"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/NotFoundResponse/#NotFoundResponse","page":"NotFoundResponse","title":"NotFoundResponse","text":"","category":"section"},{"location":"openapi/Models/NotFoundResponse/#Properties","page":"NotFoundResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"Name Type Description Notes\nerror String Error type, always \\&quot;Not Found\\&quot; for this error [default to null]\nmessage String Detailed message explaining why the resource was not found [default to null]","category":"page"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"","category":"page"},{"location":"getting-started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"getting-started/#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Clone the repository and add the package to your Julia environment:","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"using Pkg\nPkg.add(\"RxInferServer\")","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Refer to Julia documentation for more information on how to add packages to your Julia environment: Julia Documentation.","category":"page"},{"location":"getting-started/#Starting-the-Server","page":"Getting Started","title":"Starting the Server","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"RxInferServer.serve","category":"page"},{"location":"getting-started/#RxInferServer.serve","page":"Getting Started","title":"RxInferServer.serve","text":"serve() -> HTTP.Server\n\nStart the RxInfer API server with the configured settings. Official documentation is available at https://server.rxinfer.com/\n\nDescription\n\nInitializes and starts an HTTP server that exposes RxInfer functionality through a REST API. The server uses the OpenAPI specification defined in RxInferServerOpenAPI module to register endpoints.\n\nFeatures\n\nConfigurable port via the RXINFER_SERVER_PORT environment variable (default: 8000)\nGraceful shutdown with proper resource cleanup when interrupted\nLoads the .env files based on the RXINFER_SERVER_ENV environment variable\nWhen Revise.jl is loaded in the current Julia session, and the RXINFER_SERVER_ENABLE_HOT_RELOAD environment variable is set to \"true\",  the server will hot reload the source code and models when the source code changes.\n\nThis is a blocking operation that runs until interrupted (e.g., with Ctrl+C). To gracefully shut down the server, type the q or quit and press ENTER in the REPL. Note that Ctrl+C cannot be catched reliably when running in a non-interactive session.\n\nExamples\n\nusing RxInferServer\n\n# Start the server with default settings (blocks until interrupted)\nRxInferServer.serve()\n\nSee Also\n\nRxInferServer.RXINFER_SERVER_ENV: The environment on which the RxInfer server will run, determines which .env files are loaded\nRxInferServer.RXINFER_SERVER_PORT: The port on which the RxInfer server will run\nRxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD: Check if hot reloading is enabled\nRxInferServer.RXINFER_SERVER_SHOW_BANNER: Whether to show the welcome banner\nRxInferServer.RXINFER_SERVER_LISTEN_KEYBOARD: Whether to listen for keyboard input to quit the server\n\n\n\n\n\n","category":"function"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"To start the server with default settings:","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"using RxInferServer\n\n# This will block until stopped manually\nRxInferServer.serve()","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"note: Note\nWhen running the server from script, e.g. make serve, Ctrl-C might not work properly. See How do I catch CTRL-C in a script? for more information.","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"To start the server in the background:","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"@async RxInferServer.serve()\n\n# or \n\nThreads.@spawn RxInferServer.serve()","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Read more about the @async and Threads.@spawn macros in the Julia Documentation.","category":"page"},{"location":"getting-started/#Where-to-go-next?","page":"Getting Started","title":"Where to go next?","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Read more about the different configuration options in the Configuration section.","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"If you want to contribute to the project, read more about the Development section.","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/#UnauthorizedResponse","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"","category":"section"},{"location":"openapi/Models/UnauthorizedResponse/#Properties","page":"UnauthorizedResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"Name Type Description Notes\nerror String Error type, always \\&quot;Unauthorized\\&quot; for this error [default to null]\nmessage String Detailed message explaining why authentication failed [default to null]","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"","category":"page"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LearnResponse/#LearnResponse","page":"LearnResponse","title":"LearnResponse","text":"","category":"section"},{"location":"openapi/Models/LearnResponse/#Properties","page":"LearnResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"Name Type Description Notes\nlearned_parameters Map A dictionary of learned parameters and their values [default to null]","category":"page"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"","category":"page"},{"location":"openapi/Models/TokenResponse/","page":"TokenResponse","title":"TokenResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/TokenResponse/#TokenResponse","page":"TokenResponse","title":"TokenResponse","text":"","category":"section"},{"location":"openapi/Models/TokenResponse/#Properties","page":"TokenResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/TokenResponse/","page":"TokenResponse","title":"TokenResponse","text":"Name Type Description Notes\ntoken String The token to use in the Authorization header with the format \\&quot;Bearer {token}\\&quot; [default to null]","category":"page"},{"location":"openapi/Models/TokenResponse/","page":"TokenResponse","title":"TokenResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/TokenResponse/","page":"TokenResponse","title":"TokenResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/TokenResponse/","page":"TokenResponse","title":"TokenResponse","text":"","category":"page"},{"location":"models/#models","page":"Models","title":"Models","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"RxInferServer provides a flexible system for loading, managing, and exposing RxInfer probabilistic models through the API. This section explains how models work in the server, how to create them, and how the model discovery and loading process works.","category":"page"},{"location":"models/#Model-Overview","page":"Models","title":"Model Overview","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"Models in RxInferServer are self-contained probabilistic models built with RxInfer.jl that can be loaded by the server and exposed through the API. Each model:","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Is contained in its own directory\nHas a configuration file defining metadata\nContains Julia code that implements the model's logic\nCan be dynamically discovered and loaded by the server\nSupports hot-reloading for rapid development","category":"page"},{"location":"models/#Model-Discovery-and-Loading","page":"Models","title":"Model Discovery and Loading","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"The server discovers and loads models at startup using this process:","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"It scans all directories specified in RxInferServer.Models.RXINFER_SERVER_MODELS_LOCATIONS\nFor each directory, it looks for subdirectories that might contain models\nIn each subdirectory, it checks for model.jl and config.yaml files\nIf both files exist, it loads the model's configuration and code\nThe model is added to the server's model registry if successful","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Models are accessed through a RxInferServer.Models.ModelsDispatcher which provides methods to retrieve models by name or list all available (non-private) models.","category":"page"},{"location":"models/#Hot-Reloading-Models","page":"Models","title":"Hot-Reloading Models","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"RxInferServer supports hot-reloading of models during development, which means you can modify model files and see the changes without restarting the server. When model files are modified:","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"The server detects the changes automatically\nIt reloads all models from their directories\nThe updated models become immediately available through the API","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"This feature is enabled by default during development and can be disabled through the server's configuration. See Hot-Reloading for more details.","category":"page"},{"location":"models/#Model-Directory-Structure","page":"Models","title":"Model Directory Structure","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"Each model must follow this directory structure:","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"models/\n└── ModelName/\n    ├── model.jl       # Model implementation\n    └── config.yaml    # Model configuration","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"The server will automatically scan the directories specified in RXINFER_SERVER_MODELS_LOCATIONS for models. By default, it looks in the models and custom_models directories relative to the current working directory. Note that the custom_models directory is git-ignored by default, it might be useful to experiment with custom models without committing them to the repository.","category":"page"},{"location":"models/#Configuration-File-of-a-Model-(config.yaml)","page":"Models","title":"Configuration File of a Model (config.yaml)","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"The configuration file defines the model's metadata and must contain at least the following fields:","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"name: ModelName-v1             # Model name with version identifier\ndescription: Model description # A brief description of the model\nauthor: Author Name            # Name of the model's author","category":"page"},{"location":"models/#Model-Implementation-(model.jl)","page":"Models","title":"Model Implementation (model.jl)","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"The model.jl file contains the Julia code implementing the model's logic. Each model is loaded into its own module to isolate its namespace, so it can define its own types and functions without conflicts.","category":"page"},{"location":"models/#Exposing-Models-via-API","page":"Models","title":"Exposing Models via API","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"Models are exposed through the API endpoints defined in the OpenAPI specification. The main endpoints are:","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"GET /models - List all available models\nGET /models/{model_name}/info - Get detailed information about a specific model","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"When a client requests model information or executes a model, the server:","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Looks up the requested model by name\nIf found, returns the model's metadata\nReturns appropriate error responses if the model is not found or other issues occur","category":"page"},{"location":"models/#API-Reference","page":"Models","title":"API Reference","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"RxInferServer.Models.ModelsDispatcher\nRxInferServer.Models.LoadedModel\nRxInferServer.Models.get_models\nRxInferServer.Models.get_model\nRxInferServer.Models.load_models!\nRxInferServer.Models.reload!\nRxInferServer.Models.with_models\nRxInferServer.Models.get_models_dispatcher\nRxInferServer.Models.parse_default_arguments_from_config\nRxInferServer.Models","category":"page"},{"location":"models/#RxInferServer.Models.ModelsDispatcher","page":"Models","title":"RxInferServer.Models.ModelsDispatcher","text":"ModelsDispatcher\n\nA dispatcher that manages loaded models from specified locations. Responsible for model discovery, loading, and providing access to models.\n\nFields\n\nlocations::L: The locations where models are stored\nmodels::M: Dictionary mapping model names to loaded model instances\n\n\n\n\n\n","category":"type"},{"location":"models/#RxInferServer.Models.LoadedModel","page":"Models","title":"RxInferServer.Models.LoadedModel","text":"LoadedModel\n\nRepresents a loaded RxInfer probabilistic model with its metadata and implementation.\n\nFields\n\npath::String: Path to the model directory\nname::String: Name of the model\ndescription::String: Description of the model's purpose and functionality\nauthor::String: Author or organization that created the model\nroles::Vector{String}: List of roles that can access the model\nconfig::Dict{String, Any}: Configuration parameters for the model\nmod::Module: Julia module containing the model's implementation\n\n\n\n\n\n","category":"type"},{"location":"models/#RxInferServer.Models.get_models","page":"Models","title":"RxInferServer.Models.get_models","text":"get_models(dispatcher::ModelsDispatcher; role = nothing)\n\nGet all non-private models from the given dispatcher.\n\nArguments\n\ndispatcher::ModelsDispatcher: The dispatcher to get models from\nroles::Union{Vector{String}, Nothing}: The roles to filter models by (optional)\n\nReturns\n\nA collection of all non-private loaded models\n\n\n\n\n\nget_models()\n\nGet all non-private models using the current dispatcher.\n\nReturns\n\nA collection of all non-private loaded models\n\n\n\n\n\n","category":"function"},{"location":"models/#RxInferServer.Models.get_model","page":"Models","title":"RxInferServer.Models.get_model","text":"get_model(dispatcher::ModelsDispatcher, model_name::String)\n\nGet a specific model by name from the dispatcher.\n\nArguments\n\ndispatcher::ModelsDispatcher: The dispatcher to get the model from\nmodel_name::String: The name of the model to retrieve\n\nReturns\n\nLoadedModel or nothing: The requested model if found, otherwise nothing\n\n\n\n\n\nget_model(model_name::String)\n\nGet a specific model by name from the current dispatcher.\n\nArguments\n\nmodel_name::String: The name of the model to retrieve\n\nReturns\n\nLoadedModel or nothing: The requested model if found, otherwise nothing\n\n\n\n\n\n","category":"function"},{"location":"models/#RxInferServer.Models.load_models!","page":"Models","title":"RxInferServer.Models.load_models!","text":"load_models!(models, locations)\n\nLoad models from the specified locations into the models dictionary.\n\nArguments\n\nmodels: Dictionary to populate with loaded models (name => LoadedModel)\nlocations: List of directories to scan for models\n\nThrows\n\nErrorException: If a location does not exist or if duplicate model names are found\n\n\n\n\n\n","category":"function"},{"location":"models/#RxInferServer.Models.reload!","page":"Models","title":"RxInferServer.Models.reload!","text":"reload!(dispatcher::ModelsDispatcher)\n\nReload all models from the dispatcher's locations, updating the dispatcher's models. Used for hot-reloading models when their files change.\n\nArguments\n\ndispatcher::ModelsDispatcher: The dispatcher to reload models for\n\nwarning: Warning\nThis function completely replaces the models dictionary with newly loaded models, allowing for model updates, additions, and removals to be recognized. Indented for interactive use only.\n\n\n\n\n\n","category":"function"},{"location":"models/#RxInferServer.Models.with_models","page":"Models","title":"RxInferServer.Models.with_models","text":"with_models(f::Function; locations = RXINFER_SERVER_MODELS_LOCATIONS())\n\nExecute function f with an initialized models dispatcher for the given locations. Creates a scoped context where models can be accessed via the dispatcher.\n\nArguments\n\nf::Function: The function to execute within the models context\nlocations: The locations to scan for models, defaults to RXINFER_SERVER_MODELS_LOCATIONS()\n\n\n\n\n\n","category":"function"},{"location":"models/#RxInferServer.Models.get_models_dispatcher","page":"Models","title":"RxInferServer.Models.get_models_dispatcher","text":"get_models_dispatcher()::ModelsDispatcher\n\nGet the current active models dispatcher. Must be called within a with_models context.\n\nReturns\n\nModelsDispatcher: The active models dispatcher\n\nThrows\n\nErrorException: If called outside of a with_models context\n\n\n\n\n\n","category":"function"},{"location":"models/#RxInferServer.Models.parse_default_arguments_from_config","page":"Models","title":"RxInferServer.Models.parse_default_arguments_from_config","text":"parse_default_arguments_from_config(config)\n\nParse the default arguments from the model configuration.\n\nArguments\n\nconfig: The model configuration\n\nReturns\n\nDict{String, Any}: The default arguments\n\n\n\n\n\n","category":"function"},{"location":"models/#RxInferServer.Models","page":"Models","title":"RxInferServer.Models","text":"Models\n\nModule responsible for loading, managing, and accessing RxInfer probabilistic models in the server. Handles model discovery, loading, and provides access to models through a dispatcher.\n\n\n\n\n\n","category":"module"},{"location":"models/","page":"Models","title":"Models","text":"","category":"page"},{"location":"logging/#logging-system","page":"Logging","title":"Logging System","text":"","category":"section"},{"location":"logging/","page":"Logging","title":"Logging","text":"The RxInfer Server uses a logging system that divides logs by functional groups and stores them in separate files.","category":"page"},{"location":"logging/#Architecture","page":"Logging","title":"Architecture","text":"","category":"section"},{"location":"logging/","page":"Logging","title":"Logging","text":"The logging functionality is encapsulated in the Logging module (src/logging.jl), which:","category":"page"},{"location":"logging/","page":"Logging","title":"Logging","text":"Uses a TeeLogger to output logs to multiple destinations simultaneously\nGroups logs by their functional component\nMaintains separate log files for each tag/group (e.g., Server.log, Authentification.log)","category":"page"},{"location":"logging/#Usage","page":"Logging","title":"Usage","text":"","category":"section"},{"location":"logging/","page":"Logging","title":"Logging","text":"The Logging.with_logger function is the primary API:","category":"page"},{"location":"logging/","page":"Logging","title":"Logging","text":"Logging.with_logger() do\n    @info \"This message will be logged to both terminal and files\"\nend","category":"page"},{"location":"logging/#Log-Groups","page":"Logging","title":"Log Groups","text":"","category":"section"},{"location":"logging/","page":"Logging","title":"Logging","text":"Log groups are automatically derived from the file basename. For example:","category":"page"},{"location":"logging/","page":"Logging","title":"Logging","text":"Messages from src/tags/Server.jl belong to the :Server group\nMessages from src/tags/Authentification.jl belong to the :Authentification group\nMessages from src/tags/Models.jl belong to the :Models group","category":"page"},{"location":"logging/","page":"Logging","title":"Logging","text":"The system routes logs to the appropriate files based on these groups without requiring explicit group specification.","category":"page"},{"location":"logging/#Configuration","page":"Logging","title":"Configuration","text":"","category":"section"},{"location":"logging/","page":"Logging","title":"Logging","text":"For logging configuration options, see Logging Configuration in the main configuration documentation.","category":"page"},{"location":"logging/#API-Reference","page":"Logging","title":"API Reference","text":"","category":"section"},{"location":"logging/","page":"Logging","title":"Logging","text":"RxInferServer.Logging.with_logger\nRxInferServer.Logging.with_simple_logger\nRxInferServer.Logging.filter_by_group\nRxInferServer.Logging.filter_by_module\nRxInferServer.Logging.filter_by_level","category":"page"},{"location":"logging/#RxInferServer.Logging.with_logger","page":"Logging","title":"RxInferServer.Logging.with_logger","text":"with_logger(f)\n\nSets up the logging system and executes the provided function with the configured logger. Creates a TeeLogger that writes to:\n\nTerminal with human-readable formatting\nA main log file (.log) with all messages\nSeparate files for each functional group (Server.log, Authentification.log, etc.)\nA debug log file (debug.log) if debug logging is enabled, see RxInferServer.Logging.RXINFER_SERVER_ENABLE_DEBUG_LOGGING\n\nArguments\n\nf: The function to execute with the configured logger\n\nExamples\n\nLogging.with_logger() do\n    @info \"This message will be logged to both terminal and files\"\nend\n\nReturns\n\nThe return value of the provided function\n\n\n\n\n\n","category":"function"},{"location":"logging/#RxInferServer.Logging.with_simple_logger","page":"Logging","title":"RxInferServer.Logging.with_simple_logger","text":"with_simple_logger(f, io::IO)\n\nSets up the logging system and executes the provided function with the configured logger. Creates a SimpleLogger that writes to the specified IO stream.\n\nArguments\n\nf: The function to execute with the configured logger\nio: The IO stream to write the logs to\n\nReturns\n\nThe return value of the provided function\n\n\n\n\n\n","category":"function"},{"location":"logging/#RxInferServer.Logging.filter_by_group","page":"Logging","title":"RxInferServer.Logging.filter_by_group","text":"filter_by_group(group)\n\nCreates a logger filter function that only allows log messages with the specified group tag. Used to separate logs into different files by their functionality/module.\n\nArguments\n\ngroup: The symbol representing a log group (e.g., :Server, :Authentification)\n\nReturns\n\nA function that takes a logger and returns an EarlyFilteredLogger that filters by the specified group\n\n\n\n\n\n","category":"function"},{"location":"logging/#RxInferServer.Logging.filter_by_module","page":"Logging","title":"RxInferServer.Logging.filter_by_module","text":"filter_by_module(_module)\n\nCreates a logger filter function that only allows log messages from the specified module. Used to separate logs by their source module. Uses occursin to match the module name.\n\nArguments\n\n_module: The module name to filter by (e.g., \"RxInferServer\"), must be a string\n\nReturns\n\nA function that takes a logger and returns an EarlyFilteredLogger that filters by the specified module\n\n\n\n\n\n","category":"function"},{"location":"logging/#RxInferServer.Logging.filter_by_level","page":"Logging","title":"RxInferServer.Logging.filter_by_level","text":"filter_by_level(level_range)\n\nCreates a logger filter function that only allows log messages within the specified range of log levels. Used to separate logs by their severity level.\n\nArguments\n\nlevel_range: A range of log levels to include\n\nReturns\n\nA function that takes a logger and returns an EarlyFilteredLogger that filters by the specified level range\n\n\n\n\n\n","category":"function"},{"location":"logging/#Adding-New-OpenAPI-Tags","page":"Logging","title":"Adding New OpenAPI Tags","text":"","category":"section"},{"location":"logging/","page":"Logging","title":"Logging","text":"When adding new tags to the OpenAPI schema:","category":"page"},{"location":"logging/","page":"Logging","title":"Logging","text":"Create a new file in the src/tags/ directory (e.g., NewTag.jl)\nAdd a corresponding logger in the Logging.with_logger function:","category":"page"},{"location":"logging/","page":"Logging","title":"Logging","text":"# In src/logging.jl:\nMiniLoggers.MiniLogger(; io = joinpath(RXINFER_SERVER_LOGS_LOCATION, \"NewTag.log\"), kwargs_logger...) |> filter_by_group(:NewTag)","category":"page"},{"location":"logging/","page":"Logging","title":"Logging","text":"This ensures logs from the new tag will be properly captured in a dedicated log file. ","category":"page"},{"location":"logging/","page":"Logging","title":"Logging","text":"","category":"page"},{"location":"openapi/Models/ModelState/","page":"ModelState","title":"ModelState","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelState/#ModelState","page":"ModelState","title":"ModelState","text":"","category":"section"},{"location":"openapi/Models/ModelState/#Properties","page":"ModelState","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ModelState/","page":"ModelState","title":"ModelState","text":"Name Type Description Notes\nstate Map Model-specific state [default to null]","category":"page"},{"location":"openapi/Models/ModelState/","page":"ModelState","title":"ModelState","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ModelState/","page":"ModelState","title":"ModelState","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelState/","page":"ModelState","title":"ModelState","text":"","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#AuthenticationApi","page":"AuthenticationApi","title":"AuthenticationApi","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"All URIs are relative to http://localhost:8000/v1","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Method HTTP request Description\ngenerate_token POST /generate-token Generate authentication token","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"<a name=\"generateToken\"></a>","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#**generate_token**","page":"AuthenticationApi","title":"generate_token","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"TokenResponse generate_token()","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Generate authentication token","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Generates a new authentication token for accessing protected endpoints","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#Parameters","page":"AuthenticationApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#Return-type","page":"AuthenticationApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"TokenResponse","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#Authorization","page":"AuthenticationApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"No authorization required","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#HTTP-request-headers","page":"AuthenticationApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"","category":"page"},{"location":"openapi/Models/CreatedModelInfo/","page":"CreatedModelInfo","title":"CreatedModelInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreatedModelInfo/#CreatedModelInfo","page":"CreatedModelInfo","title":"CreatedModelInfo","text":"","category":"section"},{"location":"openapi/Models/CreatedModelInfo/#Properties","page":"CreatedModelInfo","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/CreatedModelInfo/","page":"CreatedModelInfo","title":"CreatedModelInfo","text":"Name Type Description Notes\nmodel_id UUID Unique identifier for the created model instance [default to null]\nmodel_name String Name of the model (including version identifier if applicable, e.g. \\&quot;BetaBernoulli-v1\\&quot;) [default to null]\ncreated_at Date Timestamp of when the model was created [default to null]\ndescription String Description of the created model instance [default to null]\narguments Map Model-specific configuration arguments [default to null]\ncurrent_episode String Name of the current episode for this model [default to null]","category":"page"},{"location":"openapi/Models/CreatedModelInfo/","page":"CreatedModelInfo","title":"CreatedModelInfo","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/CreatedModelInfo/","page":"CreatedModelInfo","title":"CreatedModelInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreatedModelInfo/","page":"CreatedModelInfo","title":"CreatedModelInfo","text":"","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/ModelsApi/#ModelsApi","page":"ModelsApi","title":"ModelsApi","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"All URIs are relative to http://localhost:8000/v1","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Method HTTP request Description\nattach_metadata_to_event POST /models/{modelid}/episodes/{episodename}/events/{event_id}/attach-metadata Attach metadata to an event\ncreate_episode POST /models/{modelid}/episodes/{episodename}/create Create a new episode for a model\ncreate_model POST /models/create Create a new model instance\ndelete_episode DELETE /models/{modelid}/episodes/{episodename}/delete Delete an episode for a model\ndelete_model DELETE /models/{model_id}/delete Delete a model instance\nget_created_models_info GET /models/created Get information about all created models for a specific token\nget_episode_info GET /models/{modelid}/episodes/{episodename} Get episode information\nget_episodes GET /models/{model_id}/episodes Get all episodes for a model\nget_model_details GET /models/{model_name}/details Get model details\nget_model_info GET /models/{model_id}/info Get model information\nget_model_state GET /models/{model_id}/state Get the state of a model\nget_models GET /models Get models\nrun_inference POST /models/{model_id}/infer Run inference on a model\nrun_learning POST /models/{model_id}/learn Learn from previous observations\nwipe_episode POST /models/{modelid}/episodes/{episodename}/wipe Wipe all events from an episode","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"attachMetadataToEvent\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**attach_metadata_to_event**","page":"ModelsApi","title":"attach_metadata_to_event","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse attach_metadata_to_event(model_id, episode_name, event_id, AttachMetadataToEventRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Attach metadata to an event","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Attach metadata to a specific event for a model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to attach metadata to [default to null]\nepisode_name String Name of the episode to attach metadata to [default to null]\nevent_id Long ID of the event to attach metadata to [default to null]\nAttachMetadataToEventRequest AttachMetadataToEventRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"createEpisode\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**create_episode**","page":"ModelsApi","title":"create_episode","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"EpisodeInfo create_episode(model_id, episode_name)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Create a new episode for a model","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Create a new episode for a specific model, note that the default episode cannot be created, but you can wipe data from it. When created, the new episode becomes the current episode for the model.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-2","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to create episode for [default to null]\nepisode_name String Name of the episode to create [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-2","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"EpisodeInfo","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-2","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-2","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"createModel\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**create_model**","page":"ModelsApi","title":"create_model","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"CreateModelResponse create_model(CreateModelRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Create a new model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Creates a new instance of a model with the specified configuration","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-3","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nCreateModelRequest CreateModelRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-3","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"CreateModelResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-3","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-3","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"deleteEpisode\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**delete_episode**","page":"ModelsApi","title":"delete_episode","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse delete_episode(model_id, episode_name)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Delete an episode for a model","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Delete a specific episode for a model, note that the default episode cannot be deleted, but you can wipe data from it. If the deleted episode was the current episode, the default episode will become the current episode.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-4","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to delete episode for [default to null]\nepisode_name String Name of the episode to delete [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-4","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-4","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-4","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"deleteModel\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**delete_model**","page":"ModelsApi","title":"delete_model","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse delete_model(model_id)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Delete a model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Delete a specific model instance by its ID","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-5","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to delete [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-5","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-5","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-5","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getCreatedModelsInfo\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_created_models_info**","page":"ModelsApi","title":"get_created_models_info","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List get_created_models_info()","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get information about all created models for a specific token","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve detailed information about all created models for a specific token","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-6","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-6","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-6","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-6","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getEpisodeInfo\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_episode_info**","page":"ModelsApi","title":"get_episode_info","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"EpisodeInfo get_episode_info(model_id, episode_name)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get episode information","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve information about a specific episode of a model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-7","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to retrieve episode for [default to null]\nepisode_name String Name of the episode to retrieve [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-7","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"EpisodeInfo","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-7","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-7","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getEpisodes\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_episodes**","page":"ModelsApi","title":"get_episodes","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List get_episodes(model_id)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get all episodes for a model","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve all episodes for a specific model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-8","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to retrieve episodes for [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-8","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-8","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-8","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getModelDetails\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_model_details**","page":"ModelsApi","title":"get_model_details","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelDetails get_model_details(model_name)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get model details","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve detailed information about a specific model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-9","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_name String Name of the model to retrieve information for (including version identifier if applicable, e.g. \\&quot;BetaBernoulli-v1\\&quot;) [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-9","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelDetails","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-9","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-9","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getModelInfo\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_model_info**","page":"ModelsApi","title":"get_model_info","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"CreatedModelInfo get_model_info(model_id)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get model information","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve detailed information about a specific model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-10","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to retrieve information for [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-10","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"CreatedModelInfo","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-10","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-10","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getModelState\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_model_state**","page":"ModelsApi","title":"get_model_state","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelState get_model_state(model_id)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get the state of a model","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve the state of a specific model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-11","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to retrieve state for [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-11","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelState","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-11","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-11","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getModels\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_models**","page":"ModelsApi","title":"get_models","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelList get_models()","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get models","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve the list of available models and their lightweight details. Note that some access tokens might not have access to all models.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-12","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-12","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelList","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-12","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-12","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"runInference\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**run_inference**","page":"ModelsApi","title":"run_inference","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"InferResponse run_inference(model_id, InferRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Run inference on a model","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Run inference on a specific model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-13","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to run inference on [default to null]\nInferRequest InferRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-13","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"InferResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-13","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-13","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"runLearning\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**run_learning**","page":"ModelsApi","title":"run_learning","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"LearnResponse run_learning(model_id, LearnRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Learn from previous observations","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Learn from previous episodes for a specific model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-14","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID  [default to null]\nLearnRequest LearnRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-14","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"LearnResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-14","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-14","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"wipeEpisode\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**wipe_episode**","page":"ModelsApi","title":"wipe_episode","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse wipe_episode(model_id, episode_name)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Wipe all events from an episode","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Wipe all events from a specific episode for a model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-15","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_id UUID ID of the model to wipe episode for [default to null]\nepisode_name String Name of the episode to wipe [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-15","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-15","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-15","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"","category":"page"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/SuccessResponse/#SuccessResponse","page":"SuccessResponse","title":"SuccessResponse","text":"","category":"section"},{"location":"openapi/Models/SuccessResponse/#Properties","page":"SuccessResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"Name Type Description Notes\nmessage String Success message [default to null]","category":"page"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"","category":"page"},{"location":"configuration/#configuration","page":"Configuration","title":"Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"This section describes the configuration options for the RxInferServer.jl package. All configuration is done through environment variables, which can be set before starting the server. These settings are runtime configurations that do not require recompilation of the project.","category":"page"},{"location":"configuration/#environment-configuration-with-env-files","page":"Configuration","title":"Environment Configuration with .env files","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server supports loading environment variables from .env files. The specific files loaded depend on the server environment setting:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_ENV\nRxInferServer.RXINFER_SERVER_ENV_PWD\nRxInferServer.RXINFER_SERVER_ENV_OVERRIDE","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_ENV","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_ENV","text":"RXINFER_SERVER_ENV() -> String\n\nControls which .env files are loaded by the server.\n\nReturns the value of the RXINFER_SERVER_ENV environment variable,  which determines the environment-specific configuration files to load. Defaults to an empty string when the environment variable is not set.\n\nBy default, values already set in the environment variable are not overridden by the .env files. Set RXINFER_SERVER_ENV_OVERRIDE to true to override existing values.\n\nFiles Loaded Based on Environment Value\n\nEnvironment Value .env Files Loaded\n\"\" (default) .env.local, .env\n\"production\" .env.production.local, .env.production, .env\n\"development\" .env.development.local, .env.development, .env\n\"test\" .env.test.local, .env.test, .env\n\"local\" .env.local.local, .env.local, .env\nCustom value \"xyz\" .env.xyz.local, .env.xyz, .env\n\nIf the same key is defined in multiple files, the first occurrence of the key is used (e.g the .env.local file takes precedence over the .env file). However, if the RXINFER_SERVER_ENV_OVERRIDE environment variable is set to true, the last occurrence of the key is used instead (e.g the .env file takes precedence over the .env.local file).\n\nAll files are assumed to be in the directory specified by the RXINFER_SERVER_ENV_PWD environment variable. If this variable is not set, the current working directory (pwd()) is used instead.\n\nwarning: Warning\nNever store sensitive information in the .env files. The .env files are included in the repository by default to simplify the setup process. In a production environment, sensitive information should be stored in a more secure manner, such as in environment variables or in a secrets manager.\n\nnote: Note\nRXINFER_SERVER_ENV, RXINFER_SERVER_ENV_PWD and RXINFER_SERVER_ENV_OVERRIDE cannot be set via the .env files as they are accessed before the .env files are loaded.\n\nSee also: RXINFER_SERVER_ENV_PWD, RXINFER_SERVER_ENV_OVERRIDE.\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_ENV_PWD","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_ENV_PWD","text":"RXINFER_SERVER_ENV_PWD() -> String\n\nReturns the directory in which to search for .env files. Defaults to the current working directory (pwd()) when the environment variable is not set.\n\nnote: Note\nRXINFER_SERVER_ENV, RXINFER_SERVER_ENV_PWD and RXINFER_SERVER_ENV_OVERRIDE cannot be set via the .env files as they are accessed before the .env files are loaded.\n\nSee also: RXINFER_SERVER_ENV, RXINFER_SERVER_ENV_OVERRIDE.\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_ENV_OVERRIDE","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_ENV_OVERRIDE","text":"RXINFER_SERVER_ENV_OVERRIDE() -> Bool\n\nReturns the value of the RXINFER_SERVER_ENV_OVERRIDE environment variable. Defaults to false when the environment variable is not set.\n\nIf RXINFER_SERVER_ENV_OVERRIDE environment variable is set to true,  values already set in the environment variable are overridden by the .env files.\n\nnote: Note\nRXINFER_SERVER_ENV, RXINFER_SERVER_ENV_PWD and RXINFER_SERVER_ENV_OVERRIDE cannot be set via the .env files as they are accessed before the .env files are loaded.\n\nSee also: RXINFER_SERVER_ENV, RXINFER_SERVER_ENV_PWD.\n\n\n\n\n\n","category":"function"},{"location":"configuration/#port-configuration","page":"Configuration","title":"Port Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server port can be configured using the following environment variable:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_PORT","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_PORT","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_PORT","text":"The port on which the RxInfer server will run.  This can be configured using the RXINFER_SERVER_PORT environment variable. Defaults to 8000 if not specified.\n\n# Set port via environment variable\nENV[\"RXINFER_SERVER_PORT\"] = 9000\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#models-configuration","page":"Configuration","title":"Models Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server supports models configuration. The following environment variables can be set to configure the models:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.Models.RXINFER_SERVER_MODELS_LOCATIONS","category":"page"},{"location":"configuration/#RxInferServer.Models.RXINFER_SERVER_MODELS_LOCATIONS","page":"Configuration","title":"RxInferServer.Models.RXINFER_SERVER_MODELS_LOCATIONS","text":"RXINFER_SERVER_MODELS_LOCATIONS\n\nThe directories where the models are stored. Colon-separated list of directories. This can be configured using the RXINFER_SERVER_MODELS_LOCATIONS environment variable. Defaults to \"models:custom_models\" if not specified.  Note that the custom_models directory is git-ignored by default. Use the custom_models directory to experiment with custom models without committing them to the repository.\n\nENV[\"RXINFER_SERVER_MODELS_LOCATIONS\"] = \"/path/to/models1:/path/to/models2\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#logging-configuration","page":"Configuration","title":"Logging Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server implements a comprehensive logging system that writes logs both to the terminal and to files. Logs are organized by functional groups (e.g., Server, Authentication) and stored in separate files. The configurable options include:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.Logging.RXINFER_SERVER_LOGS_LOCATION\nRxInferServer.Logging.RXINFER_SERVER_ENABLE_DEBUG_LOGGING\nRxInferServer.Logging.is_debug_logging_enabled","category":"page"},{"location":"configuration/#RxInferServer.Logging.RXINFER_SERVER_LOGS_LOCATION","page":"Configuration","title":"RxInferServer.Logging.RXINFER_SERVER_LOGS_LOCATION","text":"The directory where server logs will be stored. This can be configured using the RXINFER_SERVER_LOGS_LOCATION environment variable. Defaults to \".server-logs\" in the current working directory if not specified. The server automatically creates this directory if it doesn't exist.\n\nThe logging system uses:\n\nTerminal output with formatted, human-readable logs\nFile-based logging with separate files for different functional groups\n\n# Set logs directory via environment variable\nENV[\"RXINFER_SERVER_LOGS_LOCATION\"] = \"/path/to/logs\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.Logging.RXINFER_SERVER_ENABLE_DEBUG_LOGGING","page":"Configuration","title":"RxInferServer.Logging.RXINFER_SERVER_ENABLE_DEBUG_LOGGING","text":"Whether to enable debug logging. This can be configured using the RXINFER_SERVER_ENABLE_DEBUG_LOGGING environment variable. Defaults to \"false\" if not specified. Note that this is a string variable, not a boolean. If enabled, writes to debug.log in the RXINFERSERVERLOGS_LOCATION directory. Note that the debug logs are overwritten each time the server is restarted.\n\nENV[\"RXINFER_SERVER_ENABLE_DEBUG_LOGGING\"] = \"true\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.Logging.is_debug_logging_enabled","page":"Configuration","title":"RxInferServer.Logging.is_debug_logging_enabled","text":"Returns true if debug logging is enabled, false otherwise.\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"note: Note\nFor production deployments, consider setting a persistent, absolute path for your log files to ensure they are preserved and easily accessible for monitoring and debugging.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"note: Note\nmake serve command runs the server with debug logging enabled.","category":"page"},{"location":"configuration/#mongodb-configuration","page":"Configuration","title":"MongoDB Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The MongoDB connection can be configured using the following environment variables:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.Database.RXINFER_SERVER_MONGODB_URL\nRxInferServer.Database.RXINFER_SERVER_MONGODB_DATABASE","category":"page"},{"location":"configuration/#RxInferServer.Database.RXINFER_SERVER_MONGODB_URL","page":"Configuration","title":"RxInferServer.Database.RXINFER_SERVER_MONGODB_URL","text":"The MongoDB connection URL for the server. This can be configured using the RXINFER_SERVER_MONGODB_URL environment variable. Defaults to mongodb://localhost:27017 if not specified.\n\n# Set MongoDB URL via environment variable\nENV[\"RXINFER_SERVER_MONGODB_URL\"] = \"mongodb://user:password@host:port/database\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.Database.RXINFER_SERVER_MONGODB_DATABASE","page":"Configuration","title":"RxInferServer.Database.RXINFER_SERVER_MONGODB_DATABASE","text":"The MongoDB database name to use. This can be configured using the RXINFER_SERVER_MONGODB_DATABASE environment variable. Defaults to rxinferserver if not specified.\n\n# Set MongoDB database name via environment variable\nENV[\"RXINFER_SERVER_MONGODB_DATABASE\"] = \"my-database\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The default connection URL for the Docker development environment is mongodb://database:27017, which connects to the MongoDB Atlas Local instance running in the Docker Compose environment. When deploying to production, you should set this to your actual MongoDB Atlas connection string or other MongoDB instance.","category":"page"},{"location":"configuration/#Using-MongoDB-Compass","page":"Configuration","title":"Using MongoDB Compass","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"If you're using MongoDB Compass to connect to and manage your MongoDB database during development:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Always connect to localhost:27017 from your host machine (except when using the RxInferServer.Database.RXINFER_SERVER_MONGODB_URL environment variable)\nThis is because Docker maps the container's port 27017 to your host's port 27017\nNo authentication is required for the development database by default","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"For production MongoDB Atlas connections in Compass, you would use the standard Atlas connection string format.","category":"page"},{"location":"configuration/#cors-configuration","page":"Configuration","title":"CORS Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server supports CORS configuration. The following environment variables can be set to configure the CORS settings:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN\nRxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS\nRxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN","text":"The allowed origins for CORS requests. This can be configured using the RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN environment variable. Defaults to \"*\" (all origins) if not specified.\n\n# Set allowed origins\nENV[\"RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN\"] = \"https://mydomain.com\"\n\nSee also: RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS","text":"The allowed methods for CORS requests. This can be configured using the RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS environment variable. Defaults to \"GET, POST, PUT, DELETE, OPTIONS\" if not specified.\n\n# Set allowed methods\nENV[\"RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS\"] = \"GET, POST, PUT, DELETE, OPTIONS\"\n\nSee also: RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS","text":"The allowed headers for CORS requests. This can be configured using the RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS environment variable. Defaults to \"Content-Type, Authorization\" if not specified.\n\n# Set allowed headers\nENV[\"RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS\"] = \"Content-Type, Authorization\"\n\nSee also: RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS\n\n\n\n\n\n","category":"function"},{"location":"configuration/#authentication-configuration","page":"Configuration","title":"Authentication Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server implements standard Bearer token authentication using the HTTP Authorization header. Most of the endpoints except for /generate-token and /ping require authentication by default.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Authentication for development can be configured through the environment variable:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_DEV_TOKEN","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_DEV_TOKEN","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_DEV_TOKEN","text":"The development authentication token. This can be configured using the RXINFER_SERVER_DEV_TOKEN environment variable. Defaults to \"dev-token\" if not specified. Set to \"disabled\" to disable development token authentication (production mode). The development token has [\"user\", \"admin\", \"test\"] roles by default.\n\n# Use a specific development token\nENV[\"RXINFER_SERVER_DEV_TOKEN\"] = \"my-custom-token\"\n\n# Disable development token (production mode)\nENV[\"RXINFER_SERVER_DEV_TOKEN\"] = \"disabled\"\n\nwarning: Warning\nIn production environments, you should always set RXINFER_SERVER_DEV_TOKEN=disabled.\n\nSee also: is_dev_token_enabled, is_dev_token_disabled, is_dev_token\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"When implementing client applications, you must include the token in the Authorization header with the Bearer prefix:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Authorization: Bearer your-token-here","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"For development and testing, you can use the configured development token (default is dev-token):","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Authorization: Bearer dev-token","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.is_dev_token_enabled\nRxInferServer.is_dev_token_disabled\nRxInferServer.is_dev_token","category":"page"},{"location":"configuration/#RxInferServer.is_dev_token_enabled","page":"Configuration","title":"RxInferServer.is_dev_token_enabled","text":"is_dev_token_enabled()::Bool\n\nReturns true if the development token is enabled. Set the RXINFER_SERVER_DEV_TOKEN environment variable to disabled to disable the development token. Any other value will enable the development token.\n\nSee also: is_dev_token_disabled, is_dev_token, RXINFER_SERVER_DEV_TOKEN\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.is_dev_token_disabled","page":"Configuration","title":"RxInferServer.is_dev_token_disabled","text":"is_dev_token_disabled()::Bool\n\nReturns true if the development token is disabled. Set the RXINFER_SERVER_DEV_TOKEN environment variable to disabled to disable the development token. Any other value will enable the development token.\n\nSee also: is_dev_token_enabled, is_dev_token, RXINFER_SERVER_DEV_TOKEN\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.is_dev_token","page":"Configuration","title":"RxInferServer.is_dev_token","text":"is_dev_token(token::String)::Bool\n\nReturns true if the token is the development token. Returns false if the development token is disabled.\n\nSee also: is_dev_token_enabled, is_dev_token_disabled, RXINFER_SERVER_DEV_TOKEN\n\n\n\n\n\n","category":"function"},{"location":"configuration/#server-edition-configuration","page":"Configuration","title":"Server Edition","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server edition can be configured using the following environment variable:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_EDITION","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_EDITION","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_EDITION","text":"The server edition identifier. This can be configured using the RXINFER_SERVER_EDITION environment variable. This setting is used to identify the server edition in the server information endpoint and has no functional impact on server behavior. Defaults to \"CommunityEdition\" if not specified.\n\n# Set server edition via environment variable\nENV[\"RXINFER_SERVER_EDITION\"] = \"EnterpriseEdition\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#other-configuration","page":"Configuration","title":"Other Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_SHOW_BANNER\nRxInferServer.RXINFER_SERVER_LISTEN_KEYBOARD","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_SHOW_BANNER","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_SHOW_BANNER","text":"Whether to show the welcome banner. This can be configured using the RXINFER_SERVER_SHOW_BANNER environment variable. Defaults to \"true\" if not specified.\n\nENV[\"RXINFER_SERVER_SHOW_BANNER\"] = \"false\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_LISTEN_KEYBOARD","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_LISTEN_KEYBOARD","text":"Whether to listen for keyboard input to quit the server. This can be configured using the RXINFER_SERVER_LISTEN_KEYBOARD environment variable. Defaults to \"true\" if not specified. Defaults to \"false\" if \"CI\" environment variable is set to \"true\".\n\nENV[\"RXINFER_SERVER_LISTEN_KEYBOARD\"] = \"false\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#hot-reloading-configuration","page":"Configuration","title":"Hot Reloading","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server supports hot reloading, which automatically updates endpoints when code changes are detected.  This feature is controlled by the following environment variable:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD\nRxInferServer.is_hot_reload_enabled","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD","text":"RXINFER_SERVER_ENABLE_HOT_RELOAD()\n\nWhether to enable hot reloading or not. This can be configured using the RXINFER_SERVER_ENABLE_HOT_RELOAD environment variable. Defaults to \"true\" if not specified, but Revise.jl must be loaded in the current Julia session for this functionality to work. If the setting is set to \"true\", but Revise.jl is not loaded, the server will not hot reload the source code and models when the source code changes and print a warning instead. Set to \"false\" to disable hot reloading even if Revise.jl is loaded.\n\nusing Revise\n\n# Check current setting\nENV[\"RXINFER_SERVER_ENABLE_HOT_RELOAD\"] = \"true\"\n\nRxInferServer.serve()\n\nSee also: RxInferServer.is_hot_reload_enabled\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.is_hot_reload_enabled","page":"Configuration","title":"RxInferServer.is_hot_reload_enabled","text":"is_hot_reload_enabled()\n\nCheck if hot reloading is enabled.\n\n# Check current setting\nRxInferServer.is_hot_reload_enabled() \n\nSee also: RxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Hot reloading consists of two separate mechanisms:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Source Code Hot-Reloading: Updates API endpoints and server code when changes are detected\nModels Hot-Reloading: Refreshes models when their files change","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Both mechanisms monitor files for changes using Revise.jl and automatically apply updates when detected. Console logs with the [HOT-RELOAD] prefix indicate reloading activity.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"note: Note\nHot reloading requires Revise.jl to be loaded in the current Julia session. If Revise.jl is not loaded, hot reloading will be disabled even if enabled through the environment variable.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"warning: Warning\nHot reloading should be disabled in production environments as it can impact performance and may cause unexpected behavior.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"","category":"page"},{"location":"developers-guide/#developers-guide","page":"Developers guide","title":"Developers guide","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"This section describes the development process for the RxInferServer.jl project and how to setup the development environment.","category":"page"},{"location":"developers-guide/#OpenAPI-Specification-and-Code-Generation","page":"Developers guide","title":"OpenAPI Specification and Code Generation","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"This repository includes an OpenAPI specification for the RxInferServer.jl API and tools to generate Julia server and client code from it.","category":"page"},{"location":"developers-guide/#Prerequisites","page":"Developers guide","title":"Prerequisites","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Docker and Docker Compose installed on your system\nVisual Studio Code (or your preferred code editor) for editing the OpenAPI specification","category":"page"},{"location":"developers-guide/#Development-environment-with-Docker","page":"Developers guide","title":"Development environment with Docker","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"To start the development environment with Docker, from the root directory of the repository, run:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"docker compose up -d --build --wait --wait-timeout 240","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Or use the Makefile convenience command:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"make docker-start","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nThe very first startup will be slower as all Docker images are being pulled and volumes are being created. Subsequent startups will be faster.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"To stop the Docker environment:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"make docker-stop","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Or alternatively, use VSCode extension \"Docker\" to start the containers. The VSCode extension also allows to check the logs and attach to the running containers. Read more about docker here: Docker.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The docker-compose.yaml currently has the following services:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Swagger UI: a web interface for visualizing and testing the OpenAPI specification, the UI is available at http://localhost:8080 and allows to test the API endpoints, the endpoints can also be tested in VSCode by opening spec.yaml directly and clicking on the \"Try it\" button\nMongoDB Atlas Local: a local MongoDB instance running on localhost:27017 that mimics MongoDB Atlas functionality for development and testing purposes","category":"page"},{"location":"developers-guide/#Starting-the-RxInferServer","page":"Developers guide","title":"Starting the RxInferServer","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Unlike the Docker services, RxInferServer now needs to be started manually. To start the server, run:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"make serve","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"This command is a wrapper around:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"julia --project -e 'using RxInferServer; serve()'","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"This will start the server on localhost:8000 with hot-reloading enabled by default. Use the LocalPreferences.toml file to configure the server settings.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nThe very first startup will be slower as all Julia packages are being installed and precompiled. Subsequent startups will be faster as the system image is already built unless there is a significant change to the dependencies of the project or its source code in which case Julia will recompile the project again.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"You can verify the server is running by accessing the health check endpoint:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"curl -f localhost:8000/v1/ping","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"If the server is running correctly, this should return a successful response.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nServer supports hot-reloading, which automatically updates endpoints when code changes are detected. This feature is enabled by default but can be disabled using preferences. See Hot Reloading for more details.","category":"page"},{"location":"developers-guide/#Hot-Reloading","page":"Developers guide","title":"Hot-Reloading","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer includes built-in hot-reloading that automatically applies code changes without requiring server restarts.","category":"page"},{"location":"developers-guide/#Overview","page":"Developers guide","title":"Overview","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The server uses two separate hot-reloading mechanisms:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Source Code Hot-Reloading: Updates API endpoints and server code\nModels Hot-Reloading: Refreshes models when their files change","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Both mechanisms monitor files for changes using Revise.jl and automatically apply updates when detected. Console logs with the [HOT-RELOAD] prefix indicate reloading activity.","category":"page"},{"location":"developers-guide/#Controlling-Hot-Reloading","page":"Developers guide","title":"Controlling Hot-Reloading","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Hot reloading can be controlled through the RXINFER_SERVER_ENABLE_HOT_RELOAD environment variable:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Enable hot reloading (default is \"false\")\nexport RXINFER_SERVER_ENABLE_HOT_RELOAD=\"true\"\n\n# Start the server with hot reloading enabled\nmake serve","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nHot reloading requires Revise.jl to be loaded in the current Julia session. If Revise.jl is not loaded, hot reloading will be disabled even if enabled through the environment variable.","category":"page"},{"location":"developers-guide/#Best-Practices-and-Troubleshooting","page":"Developers guide","title":"Best Practices and Troubleshooting","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Hot-reloading works best for typical code changes but complex structural changes may require server restart\nDisable hot-reloading in production environments by setting RXINFER_SERVER_ENABLE_HOT_RELOAD=\"false\"\nIf issues occur, check logs for [HOT-RELOAD] errors and verify files are in monitored directories\nWhen hot reloading is enabled but not working, ensure Revise.jl is loaded in your Julia session","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"See Hot Reloading for more details.","category":"page"},{"location":"developers-guide/#Development-Workflow-with-Makefile","page":"Developers guide","title":"Development Workflow with Makefile","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The project includes a Makefile with various commands to streamline common development tasks. Here are some of the most useful commands:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Start the Docker environment (Swagger UI and MongoDB)\nmake docker-start\n\n# Stop the Docker environment\nmake docker-stop\n\n# Start the RxInferServer, with debug logs enabled\nmake serve\n\n# Run the test suite\nmake test\n\n# Install dependencies\nmake deps\n\n# Build documentation\nmake docs\n\n# Generate OpenAPI client code\nmake generate-client\n\n# Generate OpenAPI server code\nmake generate-server\n\n# Generate both client and server code\nmake generate-all\n\n# Format Julia code\nmake format\n\n# Check code formatting without modifying files\nmake check-format","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"For a full list of available commands, run:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"make help","category":"page"},{"location":"developers-guide/#MongoDB-in-Development","page":"Developers guide","title":"MongoDB in Development","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The development environment includes a MongoDB Atlas Local instance that's accessible to the RxInferServer service. The connection is pre-configured and available through the environment variable RXINFER_MONGODB_URL.","category":"page"},{"location":"developers-guide/#Connecting-with-MongoDB-Compass","page":"Developers guide","title":"Connecting with MongoDB Compass","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"MongoDB Compass is a GUI for MongoDB that allows you to explore and manipulate your data visually. To connect to the development MongoDB instance:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Download and install MongoDB Compass\nOpen MongoDB Compass\nUse the following connection string to connect to the local MongoDB instance:\nmongodb://localhost:27017\nClick \"Connect\"","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Note that when connecting from your host machine (outside the Docker network), you'll always use localhost:27017 as the address (except when using the RXINFER_MONGODB_URL environment variable). This is because the Docker port mapping makes the database accessible at this address on your host machine.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"When running in the Docker development environment, the connection URL will automatically point to the MongoDB container (mongodb://database:27017).","category":"page"},{"location":"developers-guide/#Editing-the-OpenAPI-Specification","page":"Developers guide","title":"Editing the OpenAPI Specification","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Edit the openapi/spec.yaml file directly in VSCode or your preferred code editor. The OpenAPI specification uses the YAML format and follows the OpenAPI 3 standard.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Some useful VS Code extensions for working with OpenAPI specifications include:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"\"OpenAPI (Swagger) Editor\" by 42Crunch\n\"YAML\" by Red Hat\n\"Docker\" by Microsoft","category":"page"},{"location":"developers-guide/#Accessing-Swagger-UI","page":"Developers guide","title":"Accessing Swagger UI","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Open your browser and navigate to: http://localhost:8080","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The Swagger UI will automatically load the openapi/spec.yaml file, allowing you to visualize and test your API without leaving your browser. Alternatively, you can test the API endpoints in VSCode by opening spec.yaml directly and clicking on the \"Try it\" button.","category":"page"},{"location":"developers-guide/#Testing-Authenticated-Endpoints","page":"Developers guide","title":"Testing Authenticated Endpoints","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The API uses standard Bearer token authentication with the Authorization header. Here's how to test authenticated endpoints:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Get a token:\nNavigate to the /generate-token endpoint\nClick \"Try it out\" followed by \"Execute\"\nCopy the token from the response\nFor development: You can use the predefined dev token (dev-token) configured in the environment variable RXINFER_SERVER_DEV_TOKEN\nSet up authentication:\nClick the \"Authorize\" button (padlock icon) at the top of Swagger UI\nEnter your token in the value field (without \"Bearer\" prefix)\nFor local development, you can enter dev-token\nClick \"Authorize\" and \"Close\"\nThe client will send requests with Authorization: Bearer your-token-here\nTest protected endpoints:\nAll subsequent requests will include the authorization header\nThe token remains active until you log out or close the browser\nBy default, all endpoints except /generate-token and /ping require authentication","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"See Configuration for more details on setting up authentication for development and production.","category":"page"},{"location":"developers-guide/#Generating-Code-from-OpenAPI-Specification","page":"Developers guide","title":"Generating Code from OpenAPI Specification","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"You can generate both server and client code from the OpenAPI specification using the provided scripts and Makefile commands.","category":"page"},{"location":"developers-guide/#Using-Makefile-Commands","page":"Developers guide","title":"Using Makefile Commands","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The project includes several convenient Makefile commands for code generation:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Generate only the client code\nmake generate-client\n\n# Generate only the server code\nmake generate-server\n\n# Generate both client and server code in one go\nmake generate-all","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"These commands use the underlying combined script to perform the code generation with appropriate settings.","category":"page"},{"location":"developers-guide/#Using-the-Generation-Script-Directly","page":"Developers guide","title":"Using the Generation Script Directly","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"You can also run the generation script directly with various options:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Generate both client and server code (default)\n./openapi/generate.sh all\n\n# Generate only client code\n./openapi/generate.sh client\n\n# Generate only server code\n./openapi/generate.sh server\n\n# Generate to a custom output directory\nOPENAPI_OUTPUT_DIR=\"/path/to/output\" ./openapi/generate.sh all","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The script checks if Docker is running, then uses the OpenAPI Generator Docker image to generate Julia code based on the OpenAPI specification.","category":"page"},{"location":"developers-guide/#Customizing-Output-Location","page":"Developers guide","title":"Customizing Output Location","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"By default, generated code is placed in the openapi/client and openapi/server directories. You can customize this by setting the OPENAPI_OUTPUT_DIR environment variable:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Example: Generate code to a different directory\nOPENAPI_OUTPUT_DIR=\"/path/to/custom/directory\" ./openapi/generate.sh all","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The script will create client and server subdirectories under the specified path.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nAfter the re-generation of the server code, the initial startup time will be longer due to initial compilation of the generated code.","category":"page"},{"location":"developers-guide/#Working-with-the-Generated-Code","page":"Developers guide","title":"Working with the Generated Code","text":"","category":"section"},{"location":"developers-guide/#Server-Code","page":"Developers guide","title":"Server Code","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The generated server code will be placed in the openapi/server directory as a separate Julia module and should never be modified directly. The RxInferServer.jl package will automatically load the generated code when the package is loaded. ","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The generated code does not contain the actual implementation of the endpoints. The actual implementation is located in the src/tags directory for each tag specified in the OpenAPI specification. You can also manually open the openapi/server/src/RxInferServerOpenAPI.jl file to view which endpoints must be implemented. An example generated output might look like this:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"@doc raw\"\"\"\nEncapsulates generated server code for RxInferServerOpenAPI\n\nThe following server methods must be implemented:\n\n- **get_server_info**\n    - *invocation:* GET /info\n    - *signature:* get_server_info(req::HTTP.Request;) -> ServerInfo\n\"\"\"\nmodule RxInferServerOpenAPI\n\n# ... a lot of auto generated code ...\n\nend","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"This tells you that you need to implement the get_server_info function that must return a ServerInfo object as defined in the openapi/spec.yaml file. You however, can also return other types of objects, for example ErrorResponse or UnauthorizedResponse. Those will be converted to the appropriate HTTP response codes by the server.","category":"page"},{"location":"developers-guide/#Client-Code","page":"Developers guide","title":"Client Code","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The generated client code will be placed in the openapi/client directory as a separate Julia module. This client code can be used to interact with the RxInfer API from Julia applications. The client provides Julia functions that correspond to each API endpoint defined in the OpenAPI specification.","category":"page"},{"location":"developers-guide/#Customizing-the-OpenAPI-Specification","page":"Developers guide","title":"Customizing the OpenAPI Specification","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Edit the openapi/spec.yaml file directly in your code editor to customize your API specification. ","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"warning: Important\nAfter making ANY changes to the OpenAPI specification, you MUST regenerate both the server and client code by running the generation scripts again or using the Makefile command make generate-all.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"See Generating Code from OpenAPI Specification for more details.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Failing to regenerate the code after changes to the OpenAPI specification will result in inconsistencies between your API specification and the actual server implementation. The code is not being re-generated automatically for two primary reasons:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"It might be somewhat slow for a lot of endpoints\nIt most likely will cause Revise errors with redefined structures ","category":"page"},{"location":"developers-guide/#Additional-Resources","page":"Developers guide","title":"Additional Resources","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"OpenAPI Specification\nOpenAPI Generator\nJulia Server Template\nJulia Client Template","category":"page"},{"location":"developers-guide/#Working-with-Authorization-in-Endpoints","page":"Developers guide","title":"Working with Authorization in Endpoints","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Most endpoints in RxInferServer require authentication. The middleware automatically handles token validation, but your endpoint implementation often needs to access the current user's token or roles for authorization decisions.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer.is_authorized\nRxInferServer.current_token\nRxInferServer.current_roles","category":"page"},{"location":"developers-guide/#RxInferServer.is_authorized","page":"Developers guide","title":"RxInferServer.is_authorized","text":"is_authorized()::Bool\n\nChecks if the current request is authenticated. Returns true if a token is available in the current scope, false otherwise.\n\nSee also: current_token, current_roles\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.current_token","page":"Developers guide","title":"RxInferServer.current_token","text":"current_token()::String\n\nReturns the current authenticated user's token string. This function should only be called within endpoints that require authentication.\n\nSee also: is_authorized, current_roles\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.current_roles","page":"Developers guide","title":"RxInferServer.current_roles","text":"current_roles()::Vector{String}\n\nReturns the roles assigned to the current authenticated user as a vector of strings. This function should only be called within endpoints that require authentication.\n\nSee also: is_authorized, current_token\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#Using-current_token()-and-current_roles()","page":"Developers guide","title":"Using current_token() and current_roles()","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer provides two helper functions for accessing the authenticated user's information:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"current_token(): Returns the authenticated user's token string\ncurrent_roles(): Returns a vector of role strings assigned to the current user","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Here's how to implement an endpoint that requires authorization:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"function get_protected_resource(req::HTTP.Request)::HTTP.Response\n    # The middleware has already verified that the request is authenticated\n    \n    # If you need the token for any reason (e.g., logging, user-specific resources)\n    token = current_token()\n    \n    # If you need to check roles for authorization\n    roles = current_roles()\n    \n    # Example: Filter resources based on user roles\n    if \"admin\" in roles\n        # Return admin-level resources\n    else\n        # Return regular user resources\n    end\n    \n    return HTTP.Response(200, your_response_data)\nend","category":"page"},{"location":"developers-guide/#Example:-Role-Based-Resource-Filtering","page":"Developers guide","title":"Example: Role-Based Resource Filtering","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Here's a real example from the get_models endpoint that filters models based on user roles:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"function get_models(req::HTTP.Request)::HTTP.Response\n    # Get models from storage\n    models = Models.get_models()\n\n    # Get current user's roles\n    roles = current_roles()\n\n    # Filter models by checking if any of the model's roles\n    # match any of the user's roles\n    filtered_models = filter(models) do model\n        return any(r -> r in roles, model.roles)\n    end\n\n    # rest of the implementation...\nend","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nThese functions will throw an error if called in a non-authenticated context. Always ensure they are only called in endpoints protected by the authentication middleware.","category":"page"},{"location":"developers-guide/#API-Reference","page":"Developers guide","title":"API Reference","text":"","category":"section"},{"location":"developers-guide/#Server-Lifecycle-Management","page":"Developers guide","title":"Server Lifecycle Management","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer uses a ServerState struct to manage the server's lifecycle and state. This is created automatically when the server is instantiated with the RxInferServer.serve function. This structure is used internally to keep track of the server's status and manage the server's lifecycle. The most notable use case is for the hot-reloading mechanism to check if the server is running and/or has encountered an error. The hot-reloading tasks also track the server pid file to trigger the hot-reloading tasks when the server is instantiated or shuts down.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer.ServerState\nRxInferServer.is_server_running\nRxInferServer.set_server_running\nRxInferServer.is_server_errored\nRxInferServer.set_server_errored\nRxInferServer.notify_instantiated\nRxInferServer.wait_instantiated\nRxInferServer.pid_server_event","category":"page"},{"location":"developers-guide/#RxInferServer.ServerState","page":"Developers guide","title":"RxInferServer.ServerState","text":"ServerState\n\nA structure that keeps track of the server state, including whether it is running or has errored. Used internally to check server status and manage server lifecycle events.\n\nFields\n\nis_running::Threads.Atomic{Bool}: Atomic boolean indicating if server is currently running\nis_errored::Threads.Atomic{Bool}: Atomic boolean indicating if server has encountered an error\nevent_instantiated::Base.Threads.Event: Event triggered when server is instantiated\npid_file::String: File path used to trigger the hot reload task\nrouter::HTTP.Router: The HTTP router handling server requests\nip::Sockets.IPv4: IP address the server binds to\nport::Int: Port number the server listens on\n\n\n\n\n\n","category":"type"},{"location":"developers-guide/#RxInferServer.is_server_running","page":"Developers guide","title":"RxInferServer.is_server_running","text":"is_server_running(server::ServerState) -> Bool\n\nCheck if the server is currently running.\n\nSee also: RxInferServer.set_server_running\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.set_server_running","page":"Developers guide","title":"RxInferServer.set_server_running","text":"set_server_running(server::ServerState, running::Bool)\n\nSet the server running flag to the given value.\n\nSee also: RxInferServer.is_server_running\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.is_server_errored","page":"Developers guide","title":"RxInferServer.is_server_errored","text":"is_server_errored(server::ServerState) -> Bool\n\nCheck if the server has encountered an error.\n\nSee also: RxInferServer.set_server_errored\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.set_server_errored","page":"Developers guide","title":"RxInferServer.set_server_errored","text":"set_server_errored(server::ServerState, errored::Bool)\n\nSet the server errored flag to the given value.\n\nSee also: RxInferServer.is_server_errored\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.notify_instantiated","page":"Developers guide","title":"RxInferServer.notify_instantiated","text":"notify_instantiated(server::ServerState)\n\nNotify threads which are waiting for the server to be instantiated.\n\nSee also: RxInferServer.wait_instantiated\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.wait_instantiated","page":"Developers guide","title":"RxInferServer.wait_instantiated","text":"wait_instantiated(server::ServerState)\n\nWait for the server to be instantiated.\n\nSee also: RxInferServer.notify_instantiated\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.pid_server_event","page":"Developers guide","title":"RxInferServer.pid_server_event","text":"pid_server_event(server::ServerState, event::String)\n\nLogs an event to the server's PID file. This is used, for example, to trigger the hot reload task when the server is instantiated or shuts down.\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/ServerApi/#ServerApi","page":"ServerApi","title":"ServerApi","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"All URIs are relative to http://localhost:8000/v1","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Method HTTP request Description\nget_server_info GET /info Get server information\nping_server GET /ping Health check endpoint","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"<a name=\"getServerInfo\"></a>","category":"page"},{"location":"openapi/Apis/ServerApi/#**get_server_info**","page":"ServerApi","title":"get_server_info","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"ServerInfo get_server_info()","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Get server information","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Returns information about the server, such as the RxInfer version, Server version, Server edition, and Julia version","category":"page"},{"location":"openapi/Apis/ServerApi/#Parameters","page":"ServerApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/ServerApi/#Return-type","page":"ServerApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"ServerInfo","category":"page"},{"location":"openapi/Apis/ServerApi/#Authorization","page":"ServerApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ServerApi/#HTTP-request-headers","page":"ServerApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"<a name=\"pingServer\"></a>","category":"page"},{"location":"openapi/Apis/ServerApi/#**ping_server**","page":"ServerApi","title":"ping_server","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"PingResponse ping_server()","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Health check endpoint","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Simple endpoint to check if the server is alive and running","category":"page"},{"location":"openapi/Apis/ServerApi/#Parameters-2","page":"ServerApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/ServerApi/#Return-type-2","page":"ServerApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"PingResponse","category":"page"},{"location":"openapi/Apis/ServerApi/#Authorization-2","page":"ServerApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"No authorization required","category":"page"},{"location":"openapi/Apis/ServerApi/#HTTP-request-headers-2","page":"ServerApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"","category":"page"},{"location":"openapi/Models/CreateModelResponse/","page":"CreateModelResponse","title":"CreateModelResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateModelResponse/#CreateModelResponse","page":"CreateModelResponse","title":"CreateModelResponse","text":"","category":"section"},{"location":"openapi/Models/CreateModelResponse/#Properties","page":"CreateModelResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/CreateModelResponse/","page":"CreateModelResponse","title":"CreateModelResponse","text":"Name Type Description Notes\nmodel_id UUID Unique identifier for the created model instance [default to null]","category":"page"},{"location":"openapi/Models/CreateModelResponse/","page":"CreateModelResponse","title":"CreateModelResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/CreateModelResponse/","page":"CreateModelResponse","title":"CreateModelResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateModelResponse/","page":"CreateModelResponse","title":"CreateModelResponse","text":"","category":"page"},{"location":"openapi/Models/ModelList/","page":"ModelList","title":"ModelList","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelList/#ModelList","page":"ModelList","title":"ModelList","text":"","category":"section"},{"location":"openapi/Models/ModelList/#Properties","page":"ModelList","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ModelList/","page":"ModelList","title":"ModelList","text":"Name Type Description Notes\nmodels List List of available models [default to null]","category":"page"},{"location":"openapi/Models/ModelList/","page":"ModelList","title":"ModelList","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ModelList/","page":"ModelList","title":"ModelList","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelList/","page":"ModelList","title":"ModelList","text":"","category":"page"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/InferResponse/#InferResponse","page":"InferResponse","title":"InferResponse","text":"","category":"section"},{"location":"openapi/Models/InferResponse/#Properties","page":"InferResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"Name Type Description Notes\nevent_id Long Unique identifier for the inference event [default to null]\nresults Map Model-specific results of the inference [default to null]\nerrors List List of errors that occurred during the inference call, but were not fatal and the inference was still completed successfully [default to null]","category":"page"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"","category":"page"},{"location":"old/#Basic-Usage","page":"-","title":"Basic Usage","text":"","category":"section"},{"location":"old/","page":"-","title":"-","text":"Here's a simple example of deploying a coin toss model:","category":"page"},{"location":"old/","page":"-","title":"-","text":"using RxInfer\nusing RxInferServer\n\n# Define a coin toss model\n@model function coin_model(y, a, b)\n    θ ~ Beta(a, b)\n    for i in eachindex(y)\n        y[i] ~ Bernoulli(θ)\n    end\nend\n\n# Create model specification with constraints and initialization\nconstraints = @constraints begin\n    q(θ, y) = q(θ)q(y)\nend\n\ninit = @initialization begin\n    q(θ) = Beta(1.0, 1.0)\nend\n\n# Create and start the server\nserver = RxInferModelServer()\n\n# Add model endpoint\nadd_model(\n    server,\n    \"/coin\",\n    coin_model(a=4.0, b=8.0),\n    [:θ],\n    constraints=constraints,\n    initialization=init,\n)\n\nstart(server)\n\n# Server will be available at http://localhost:8080","category":"page"},{"location":"old/","page":"-","title":"-","text":"You can then make POST requests to the endpoint:","category":"page"},{"location":"old/","page":"-","title":"-","text":"curl -X POST http://localhost:8080/coin \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"data\": {\"y\": [1,1,0,1,1,0,1]}}'","category":"page"},{"location":"old/","page":"-","title":"-","text":"or using Julia:","category":"page"},{"location":"old/","page":"-","title":"-","text":"using HTTP, JSON3\n\nresponse = HTTP.post(\"http://localhost:8080/coin\",\n                     [\"Content-Type\" => \"application/json\"],\n                     JSON3.write(Dict(\"data\" => Dict(\"y\" => [1,1,0,1,1,0,1]))))","category":"page"},{"location":"old/","page":"-","title":"-","text":"The response will contain the posterior distributions:","category":"page"},{"location":"old/","page":"-","title":"-","text":"{\n    \"posteriors\": {\n        \"θ\": {\n            \"α\": 9.0,\n            \"β\": 10.0\n        }\n    }\n}","category":"page"},{"location":"old/#Advanced-Features","page":"-","title":"Advanced Features","text":"","category":"section"},{"location":"old/#Inference-Parameters","page":"-","title":"Inference Parameters","text":"","category":"section"},{"location":"old/","page":"-","title":"-","text":"You can control inference parameters through the request body:","category":"page"},{"location":"old/","page":"-","title":"-","text":"{\n    \"data\": {\"y\": [1,1,0,1,1,0,1]},\n    \"iterations\": 50,\n    \"free_energy\": true\n}","category":"page"},{"location":"old/#Multiple-Endpoints","page":"-","title":"Multiple Endpoints","text":"","category":"section"},{"location":"old/","page":"-","title":"-","text":"You can add multiple models to the same server:","category":"page"},{"location":"old/","page":"-","title":"-","text":"# Add a model with few iterations\nadd_model(server, \"/coin-quick\", coin_model(a=4.0, b=8.0), [:θ], \n         constraints=constraints, init=init)\n\n# Add same model with more iterations for better accuracy\nadd_model(server, \"/coin-accurate\", coin_model(a=4.0, b=8.0), [:θ], \n         constraints=constraints, init=init)","category":"page"},{"location":"old/#Meta-Specifications","page":"-","title":"Meta Specifications","text":"","category":"section"},{"location":"old/","page":"-","title":"-","text":"Meta specifications allow you to fine-tune the inference behavior:","category":"page"},{"location":"old/","page":"-","title":"-","text":"struct FastMeta end\nstruct StableMeta end\n# Define different meta specifications for different inference behaviors\nmeta_fast = @meta begin\n    Bernoulli(θ, y) -> FastMeta()\nend\n\nmeta_stable = @meta begin\n    Bernoulli(θ, y) -> StableMeta()\nend\n\n# Add endpoints with different meta specifications\nadd_model(server, \"/coin-fast\", coin_model(a=4.0, b=8.0), [:θ],\n         constraints=constraints, init=init, meta=meta_fast)\n\nadd_model(server, \"/coin-stable\", coin_model(a=4.0, b=8.0), [:θ],\n         constraints=constraints, init=init, meta=meta_stable)","category":"page"},{"location":"old/#Missing-Data-Handling","page":"-","title":"Missing Data Handling","text":"","category":"section"},{"location":"old/","page":"-","title":"-","text":"The server can handle missing data in the input:","category":"page"},{"location":"old/","page":"-","title":"-","text":"@model function smoothing_model(x0, y)\n    P ~ Gamma(shape=0.001, scale=0.001)\n    x_prior ~ Normal(mean=mean(x0), var=var(x0))\n    \n    local x\n    x_prev = x_prior\n    \n    for i in 1:length(y)\n        x[i] ~ Normal(mean=x_prev, precision=1.0)\n        y[i] ~ Normal(mean=x[i], precision=P)\n        x_prev = x[i]\n    end\nend\n\n# Data with missing values is handled automatically\ndata = [1.0, 2.0, missing, 4.0, 5.0]","category":"page"},{"location":"old/","page":"-","title":"-","text":"RxInferServer.OldImplementation.start   \nRxInferServer.OldImplementation.add_model \nRxInferServer.OldImplementation.add \nRxInferServer.OldImplementation.stop \nRxInferServer.OldImplementation.DeployableRxInferModel\nRxInferServer.OldImplementation.RxInferModelServer","category":"page"},{"location":"old/#RxInferServer.OldImplementation.start","page":"-","title":"RxInferServer.OldImplementation.start","text":"start(server::RxInferModelServer)\n\nStart the web server on the specified port.\n\n\n\n\n\n","category":"function"},{"location":"old/#RxInferServer.OldImplementation.add_model","page":"-","title":"RxInferServer.OldImplementation.add_model","text":"add_model(server::RxInferModelServer, path::String, model_spec::GraphPPL.ModelGenerator, output_vars::Vector{Symbol}; \n         method::String=\"POST\", kwargs...)\n\nAdd a new endpoint that serves a RxInfer model.\n\nArguments\n\nserver: The web server instance\npath: The endpoint path (e.g., \"/model\")\nmodel_spec: The RxInfer model specification\noutput_vars: Variables to return in the response\nmethod: The HTTP method (default: \"POST\")\nkwargs...: Additional keyword arguments including:\nconstraints: Model constraints (optional)\ninitialization: Model initialization (optional)\nDefault inference parameters (e.g., iterations, free_energy)\n\n\n\n\n\n","category":"function"},{"location":"old/#RxInferServer.OldImplementation.add","page":"-","title":"RxInferServer.OldImplementation.add","text":"add(handler::Function, server::RxInferModelServer, path::String; method::String=\"GET\")\n\nAdd a new endpoint to the web server.\n\nArguments\n\nhandler: The function to handle the request\nserver: The web server instance\npath: The endpoint path (e.g., \"/hello\")\nmethod: The HTTP method (default: \"GET\")\n\n\n\n\n\n","category":"function"},{"location":"old/#RxInferServer.OldImplementation.stop","page":"-","title":"RxInferServer.OldImplementation.stop","text":"stop(server::RxInferModelServer)\n\nStop the web server.\n\n\n\n\n\n","category":"function"},{"location":"old/#RxInferServer.OldImplementation.DeployableRxInferModel","page":"-","title":"RxInferServer.OldImplementation.DeployableRxInferModel","text":"DeployableRxInferModel\n\nA wrapper for RxInfer models that can be deployed as a service.\n\nFields\n\nmodel: The RxInfer model specification (a GraphPPL.ModelGenerator)\nconstraints: The constraint specification for the model\ninit: The initialization specification for the model\nmeta: The meta specification for the model\n\n\n\n\n\n","category":"type"},{"location":"old/#RxInferServer.OldImplementation.RxInferModelServer","page":"-","title":"RxInferServer.OldImplementation.RxInferModelServer","text":"RxInferModelServer\n\nA modular web server that allows dynamic addition of endpoints, particularly for serving RxInfer models.\n\n\n\n\n\n","category":"type"},{"location":"old/","page":"-","title":"-","text":"","category":"page"},{"location":"openapi/Models/LightweightModelDetails/","page":"LightweightModelDetails","title":"LightweightModelDetails","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LightweightModelDetails/#LightweightModelDetails","page":"LightweightModelDetails","title":"LightweightModelDetails","text":"","category":"section"},{"location":"openapi/Models/LightweightModelDetails/#Properties","page":"LightweightModelDetails","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/LightweightModelDetails/","page":"LightweightModelDetails","title":"LightweightModelDetails","text":"Name Type Description Notes\nname String Name of the model (including version identifier, e.g. \\&quot;BetaBernoulli-v1\\&quot;) [default to null]\ndescription String Brief description of the model [default to null]","category":"page"},{"location":"openapi/Models/LightweightModelDetails/","page":"LightweightModelDetails","title":"LightweightModelDetails","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/LightweightModelDetails/","page":"LightweightModelDetails","title":"LightweightModelDetails","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LightweightModelDetails/","page":"LightweightModelDetails","title":"LightweightModelDetails","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = RxInferServer","category":"page"},{"location":"#RxInferServer","page":"Home","title":"RxInferServer","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for RxInferServer.","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Warning\nThe implementation is work in progress and the API is not yet stable and may undergo significant changes. Use at your own risk.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"RxInferServer provides a REST API server for RxInfer.jl, enabling remote access to inference capabilities through HTTP endpoints. The server is built on top of HTTP.jl and follows OpenAPI specifications.","category":"page"},{"location":"#API-Documentation","page":"Home","title":"API Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The RxInferServer API is documented using the OpenAPI specification. You can explore the API in the following ways:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Interact with the stable version of the API using the Swagger UI\nInteract with the latest version of the API using the Swagger UI","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Swagger UI provides an interactive interface to explore the API endpoints, make test requests, and view response formats. It's a helpful tool for developers integrating with the RxInferServer API.","category":"page"},{"location":"#Development-and-implementation-details","page":"Home","title":"Development and implementation details","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"See the Development section for more details on the development process and implementation details.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This project is licensed under the GNU Affero General Public License v3.0 - see the LICENSE file for details.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For companies and organizations that require different licensing terms, alternative licensing options are available from Lazy Dynamics. Please contact Lazy Dynamics for more information about licensing options that may better suit your specific needs and use cases.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
